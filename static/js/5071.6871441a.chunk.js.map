{"version":3,"file":"static/js/5071.6871441a.chunk.js","mappings":"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","sources":["components/ComponentCard.js","views/form-validation/FormValidation.js"],"sourcesContent":["import { Card, CardBody, CardTitle, CardSubtitle } from 'reactstrap';\r\nimport PropTypes from 'prop-types';\r\n\r\nconst ComponentCard = ({ children, title, subtitle }) => {\r\n  return (\r\n    <Card>\r\n      <CardTitle tag=\"h4\" className=\"border-bottom px-4 py-3 mb-0\">\r\n        {title}\r\n      </CardTitle>\r\n      <CardBody className=\"p-4\">\r\n        <CardSubtitle className=\"text-muted mb-3\">{subtitle || ''}</CardSubtitle>\r\n        <div>{children}</div>\r\n      </CardBody>\r\n    </Card>\r\n  );\r\n};\r\n\r\nComponentCard.propTypes = {\r\n  children: PropTypes.node,\r\n  title: PropTypes.string,\r\n  subtitle: PropTypes.node\r\n};\r\n\r\nexport default ComponentCard;\r\n","import React, { useState } from 'react';\r\nimport { Row, Col, Button, FormGroup, Label, ListGroup, ListGroupItem } from 'reactstrap';\r\nimport { useForm } from 'react-hook-form';\r\nimport Form from 'react-validation/build/form';\r\n\r\nimport ComponentCard from '../../components/ComponentCard';\r\n\r\nconst FormValidate = () => {\r\n  const { register, handleSubmit, formState: { errors } } = useForm(); // initialise the hook\r\n  const [Formvalue, setFormvalue] = useState({\r\n    firstname: '',\r\n    lastname: '',\r\n    email: '',\r\n    age: '',\r\n    title: '',\r\n    mobile: '',\r\n  });\r\n  const onSubmit = (data) => {\r\n    setFormvalue(data);\r\n  };\r\n  return (\r\n    <>\r\n      <Row>\r\n        <Col sm=\"12\">\r\n          <ComponentCard title=\"Form Validation\">\r\n            <Form onSubmit={handleSubmit(onSubmit)}>\r\n              <FormGroup>\r\n                <Label className=\"control-Label\" htmlFor=\"firstname\">\r\n                  First name *\r\n                </Label>\r\n                <div className=\"mb-2\">\r\n                  <input\r\n                    type=\"text\"\r\n                    {...register('firstname', { required: true })}\r\n                    className=\"form-control\"\r\n                  />\r\n                </div>\r\n                <span className=\"text-danger\">{errors.firstname && 'First name is required.'}</span>\r\n              </FormGroup>\r\n              <FormGroup>\r\n                <Label className=\"control-Label\" htmlFor=\"lastname\">\r\n                  Last name *\r\n                </Label>\r\n                <div className=\"mb-2\">\r\n                  <input\r\n                    type=\"text\"\r\n                    {...register('lastname', { required: true })}\r\n                    className=\"form-control\"\r\n                  />\r\n                </div>\r\n                <span className=\"text-danger\">{errors.lastname && 'Last name is required.'}</span>\r\n              </FormGroup>\r\n              <FormGroup>\r\n                <Label className=\"control-Label\" htmlFor=\"username\">\r\n                  Username *\r\n                </Label>\r\n                <div className=\"mb-2\">\r\n                  <input\r\n                    type=\"text\"\r\n                    {...register('username', { required: true })}\r\n                    className=\"form-control\"\r\n                  />\r\n                </div>\r\n                <span className=\"text-danger\">{errors.username && 'Username is required.'}</span>\r\n              </FormGroup>\r\n              <FormGroup>\r\n                <Label className=\"control-Label\" htmlFor=\"email\">\r\n                  Email *\r\n                </Label>\r\n                <div className=\"mb-2\">\r\n                  <input\r\n                    type=\"text\"\r\n                    {...register('usernemailame', { required: true, pattern: /^\\S+@\\S+$/i })}\r\n                    className=\"form-control\"\r\n                  />\r\n                </div>\r\n                <span className=\"text-danger\">{errors.email && 'Email is required.'}</span>\r\n              </FormGroup>\r\n              <FormGroup>\r\n                <Label className=\"control-Label\" htmlFor=\"mobile\">\r\n                  Mobile No *\r\n                </Label>\r\n                <div className=\"mb-2\">\r\n                  <input\r\n                    type=\"text\"\r\n                    {...register('mobile', { required: true, maxLength: 11, minLength: 8 })}\r\n                    className=\"form-control\"\r\n                  />\r\n                </div>\r\n                <span className=\"text-danger\">\r\n                  {errors.mobile && 'Enter a Valid mobile number.'}\r\n                </span>\r\n              </FormGroup>\r\n              <FormGroup>\r\n                <Label className=\"control-Label\" htmlFor=\"age\">\r\n                  Age *\r\n                </Label>\r\n                <div className=\"mb-2\">\r\n                  <input\r\n                    type=\"number\"\r\n                    {...register('age', { required: true, pattern: /\\d+/ })}\r\n                    className=\"form-control\"\r\n                  />\r\n                </div>\r\n                <span className=\"text-danger\">{errors.age && 'Please enter number for age.'}</span>\r\n              </FormGroup>\r\n              <FormGroup>\r\n                <Label className=\"control-Label\" htmlFor=\"title\">\r\n                  Select Gender *\r\n                </Label>\r\n                <div className=\"mb-2\">\r\n                  <select\r\n                    className=\"form-control\"\r\n                    {...register('title', { required: true })}\r\n                  >\r\n                    <option value=\"\">Select Option</option>\r\n                    <option value=\"Mr\">Mr</option>\r\n                    <option value=\"Mrs\">Mrs</option>\r\n                    <option value=\"Miss\">Miss</option>\r\n                  </select>\r\n                </div>\r\n                <span className=\"text-danger\">{errors.title && 'Please select value.'}</span>\r\n              </FormGroup>\r\n              {/* <FormGroup>\r\n                <Label>Are you a developer?</Label>\r\n                <br />\r\n                <FormGroup check inline>\r\n                  <Input\r\n                    type=\"radio\"\r\n                    value=\"Yes\"\r\n                    {...register('developer', { required: true })}\r\n                  />\r\n                  <Label check>Yes</Label>\r\n                </FormGroup>\r\n                <FormGroup check inline>\r\n                  <Input\r\n                    type=\"radio\"\r\n                    value=\"No\"\r\n                    {...register('developer', { required: true })}\r\n                  />\r\n                  <Label check>No</Label>\r\n                </FormGroup>\r\n                <span className=\"text-danger\">{errors.developer && 'Please select value.'}</span>\r\n              </FormGroup> */}\r\n              <FormGroup>\r\n                <Button className=\"button btn-info\" type=\"submit\">\r\n                  Submit\r\n                </Button>\r\n              </FormGroup>\r\n            </Form>\r\n            <hr />\r\n            <h4 className=\"mt-5\">Check Data after form submit</h4>\r\n            <ListGroup>\r\n              <ListGroupItem>Firstname: {Formvalue.firstname}</ListGroupItem>\r\n              <ListGroupItem>Lirstname: {Formvalue.lastname}</ListGroupItem>\r\n              <ListGroupItem>Username: {Formvalue.username}</ListGroupItem>\r\n              <ListGroupItem>Age: {Formvalue.age}</ListGroupItem>\r\n              <ListGroupItem>Email Id: {Formvalue.email}</ListGroupItem>\r\n              <ListGroupItem>Mobile No: {Formvalue.mobile}</ListGroupItem>\r\n              <ListGroupItem>Gender: {Formvalue.title}</ListGroupItem>\r\n            </ListGroup>\r\n          </ComponentCard>\r\n        </Col>\r\n      </Row>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default FormValidate;\r\n"],"names":["_ref","children","title","subtitle","_jsxs","Card","_jsx","CardTitle","tag","className","CardBody","CardSubtitle","FormValidate","register","handleSubmit","formState","errors","useForm","Formvalue","setFormvalue","useState","firstname","lastname","email","age","mobile","_Fragment","Row","Col","sm","ComponentCard","Form","onSubmit","data","FormGroup","Label","htmlFor","type","required","username","pattern","maxLength","minLength","value","Button","ListGroup","ListGroupItem"],"sourceRoot":""}