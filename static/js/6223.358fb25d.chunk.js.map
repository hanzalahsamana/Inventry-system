{"version":3,"file":"static/js/6223.358fb25d.chunk.js","mappings":"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","sources":["assets/images/bg/login-bg-right.svg","assets/images/bg/login-bgleft.svg","views/auth/LoginFormik.js"],"sourcesContent":["var _path, _path2;\nfunction _extends() { _extends = Object.assign ? Object.assign.bind() : function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\nimport * as React from \"react\";\nfunction SvgLoginBgRight(_ref, svgRef) {\n  let {\n    title,\n    titleId,\n    ...props\n  } = _ref;\n  return /*#__PURE__*/React.createElement(\"svg\", _extends({\n    width: 235,\n    height: 255,\n    viewBox: \"0 0 235 255\",\n    fill: \"none\",\n    xmlns: \"http://www.w3.org/2000/svg\",\n    ref: svgRef,\n    \"aria-labelledby\": titleId\n  }, props), title ? /*#__PURE__*/React.createElement(\"title\", {\n    id: titleId\n  }, title) : null, _path || (_path = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M68.0998 80.8352C29.568 58.8255 50.7474 26.3993 66.1536 12.9374L221.331 57.3035L173.743 227.335C119.588 252.59 90.715 235.279 83.0476 223.467C77.2742 209.877 90.3539 183.104 97.6153 171.416C117.578 148.566 120.185 122.853 118.994 112.853C112.554 93.0899 82.3813 83.2732 68.0998 80.8352Z\",\n    fill: \"#62CFF1\",\n    fillOpacity: 0.5\n  })), _path2 || (_path2 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M88 72C43.2 60 55.3333 19 67 0L235 1V197C187.8 240.2 154 230.333 143 220C133.4 207.2 139 174.667 143 160C156.6 129.6 152 101.333 148 91C136 71.8 103 70.3333 88 72Z\",\n    fill: \"#62CFF1\"\n  })));\n}\nconst ForwardRef = /*#__PURE__*/React.forwardRef(SvgLoginBgRight);\nexport default __webpack_public_path__ + \"static/media/login-bg-right.8db5a9fe4230b1996c1088f3c72a1eb1.svg\";\nexport { ForwardRef as ReactComponent };","var _path;\nfunction _extends() { _extends = Object.assign ? Object.assign.bind() : function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\nimport * as React from \"react\";\nfunction SvgLoginBgleft(_ref, svgRef) {\n  let {\n    title,\n    titleId,\n    ...props\n  } = _ref;\n  return /*#__PURE__*/React.createElement(\"svg\", _extends({\n    width: 376,\n    height: 317,\n    viewBox: \"0 0 376 317\",\n    fill: \"none\",\n    xmlns: \"http://www.w3.org/2000/svg\",\n    ref: svgRef,\n    \"aria-labelledby\": titleId\n  }, props), title ? /*#__PURE__*/React.createElement(\"title\", {\n    id: titleId\n  }, title) : null, _path || (_path = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M98 59.596C70 -2.00401 21 -4.07068 0 2.59599V316.596L375 315.596C377.4 234.796 297 180.263 257 165.596C215.667 155.929 126 121.196 98 59.596Z\",\n    fill: \"#2B87F3\"\n  })));\n}\nconst ForwardRef = /*#__PURE__*/React.forwardRef(SvgLoginBgleft);\nexport default __webpack_public_path__ + \"static/media/login-bgleft.86cfa8964ef473760adbe3b9a05e7377.svg\";\nexport { ForwardRef as ReactComponent };","import React from 'react';\r\nimport { Button, Label, FormGroup, Container, Row, Col, Card, CardBody, Input } from 'reactstrap';\r\nimport { Formik, Field, Form, ErrorMessage } from 'formik';\r\nimport * as Yup from 'yup';\r\nimport { Link, useNavigate } from 'react-router-dom';\r\nimport AuthLogo from '../../layouts/logo/AuthLogo';\r\nimport { ReactComponent as LeftBg } from '../../assets/images/bg/login-bgleft.svg';\r\nimport { ReactComponent as RightBg } from '../../assets/images/bg/login-bg-right.svg';\r\n\r\nconst LoginFormik = () => {\r\n  const navigate = useNavigate();\r\n\r\n  const initialValues = {\r\n    email: '',\r\n    password: '',\r\n  };\r\n\r\n  const validationSchema = Yup.object().shape({\r\n    email: Yup.string().email('Email is invalid').required('Email is required'),\r\n    password: Yup.string()\r\n      .min(6, 'Password must be at least 6 characters')\r\n      .required('Password is required'),\r\n  });\r\n\r\n  return (\r\n    <div className=\"loginBox\">\r\n      <LeftBg className=\"position-absolute left bottom-0\" />\r\n      <RightBg className=\"position-absolute end-0 top\" />\r\n      <Container fluid className=\"h-100\">\r\n        <Row className=\"justify-content-center align-items-center h-100\">\r\n          <Col lg=\"12\" className=\"loginContainer\">\r\n            <AuthLogo />\r\n            <Card>\r\n              <CardBody className=\"p-4 m-1\">\r\n                <h4 className=\"mb-0 fw-bold\">Login</h4>\r\n                <small className=\"pb-4 d-block\">\r\n                  Don't have an account? <Link to=\"/registerformik\">Sign Up</Link>\r\n                </small>\r\n                <Formik\r\n                  initialValues={initialValues}\r\n                  validationSchema={validationSchema}\r\n                  onSubmit={(fields) => {\r\n                    // eslint-disable-next-line no-alert\r\n                    alert(`SUCCESS!! :-)\\n\\n${JSON.stringify(fields, null, 4)}`);\r\n                    navigate('/');\r\n                  }}\r\n                  render={({ errors, touched }) => (\r\n                    <Form>\r\n                      <FormGroup>\r\n                        <Label htmlFor=\"email\">Email</Label>\r\n                        <Field\r\n                          name=\"email\"\r\n                          type=\"text\"\r\n                          className={`form-control${\r\n                            errors.email && touched.email ? ' is-invalid' : ''\r\n                          }`}\r\n                        />\r\n                        <ErrorMessage name=\"email\" component=\"div\" className=\"invalid-feedback\" />\r\n                      </FormGroup>\r\n                      <FormGroup>\r\n                        <Label htmlFor=\"password\">Password</Label>\r\n                        <Field\r\n                          name=\"password\"\r\n                          type=\"password\"\r\n                          className={`form-control${\r\n                            errors.password && touched.password ? ' is-invalid' : ''\r\n                          }`}\r\n                        />\r\n                        <ErrorMessage\r\n                          name=\"password\"\r\n                          component=\"div\"\r\n                          className=\"invalid-feedback\"\r\n                        />\r\n                      </FormGroup>\r\n                      <FormGroup className=\"form-check d-flex\" inline>\r\n                        <Label check>\r\n                          <Input type=\"checkbox\" />\r\n                          Remember me\r\n                        </Label>\r\n                        <Link className=\"ms-auto text-decoration-none\" to=\"/recoverpwd\">\r\n                          <small>Forgot Password?</small>\r\n                        </Link>\r\n                      </FormGroup>\r\n                      <FormGroup>\r\n                        <Button type=\"submit\" color=\"primary\" className=\"me-2\" onClick={() => navigate('/dashboards/modern')}>\r\n                          Login\r\n                        </Button>\r\n                      </FormGroup>\r\n                    </Form>\r\n                  )}\r\n                />\r\n              </CardBody>\r\n            </Card>\r\n          </Col>\r\n        </Row>\r\n      </Container>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default LoginFormik;\r\n"],"names":["_path","_path2","_extends","Object","assign","bind","target","i","arguments","length","source","key","prototype","hasOwnProperty","call","apply","this","SvgLoginBgRight","_ref","svgRef","title","titleId","props","width","height","viewBox","fill","xmlns","ref","id","d","fillOpacity","ForwardRef","SvgLoginBgleft","LoginFormik","navigate","useNavigate","validationSchema","Yup","shape","email","required","password","min","_jsxs","className","children","_jsx","LeftBg","RightBg","Container","fluid","Row","Col","lg","AuthLogo","Card","CardBody","Link","to","Formik","initialValues","onSubmit","fields","alert","concat","JSON","stringify","render","errors","touched","Form","FormGroup","Label","htmlFor","Field","name","type","ErrorMessage","component","inline","check","Input","Button","color","onClick"],"sourceRoot":""}