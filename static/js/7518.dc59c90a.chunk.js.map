{"version":3,"file":"static/js/7518.dc59c90a.chunk.js","mappings":"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","sources":["components/ComponentCard.js","views/apps/accessControlCASL/AccessControl.js"],"sourcesContent":["import { Card, CardBody, CardTitle, CardSubtitle } from 'reactstrap';\r\nimport PropTypes from 'prop-types';\r\n\r\nconst ComponentCard = ({ children, title, subtitle }) => {\r\n  return (\r\n    <Card>\r\n      <CardTitle tag=\"h4\" className=\"border-bottom px-4 py-3 mb-0\">\r\n        {title}\r\n      </CardTitle>\r\n      <CardBody className=\"p-4\">\r\n        <CardSubtitle className=\"text-muted mb-3\">{subtitle || ''}</CardSubtitle>\r\n        <div>{children}</div>\r\n      </CardBody>\r\n    </Card>\r\n  );\r\n};\r\n\r\nComponentCard.propTypes = {\r\n  children: PropTypes.node,\r\n  title: PropTypes.string,\r\n  subtitle: PropTypes.node\r\n};\r\n\r\nexport default ComponentCard;\r\n","import React from 'react';\r\nimport { Row, Col, Button, ButtonGroup, ListGroup, ListGroupItem } from 'reactstrap';\r\nimport { defineAbility } from '@casl/ability';\r\nimport { Can } from '@casl/react';\r\nimport ComponentCard from '../../../components/ComponentCard';\r\n\r\nconst permissions = {\r\n  CanEdit: {\r\n    action: 'Can-edit',\r\n    subject: 'address',\r\n  },\r\n  CanDelete: {\r\n    action: 'Can-delete',\r\n    subject: 'address',\r\n  },\r\n};\r\n\r\nconst users = {\r\n  admin: {\r\n    permissions: ['CanEdit', 'CanDelete'],\r\n  },\r\n  Manager: {\r\n    permissions: ['CanEdit'],\r\n  },\r\n  SubscriberReadOnly: {\r\n    permissions: [],\r\n  },\r\n};\r\n\r\nconst addresses = [\r\n  {\r\n    id: 1,\r\n    city: 'New York',\r\n    street: '5684 Max Summit',\r\n    type: 'address',\r\n  },\r\n  {\r\n    id: 2,\r\n    city: 'Manhatten York',\r\n    street: '5684 Max Summit',\r\n    type: 'address',\r\n  },\r\n  {\r\n    id: 3,\r\n    city: 'Canada street York',\r\n    street: '5684 Max Summit',\r\n    type: 'address',\r\n  },\r\n  {\r\n    id: 4,\r\n    city: 'Delhi street',\r\n    street: '5684 Max Summit',\r\n    type: 'address',\r\n  },\r\n  {\r\n    id: 5,\r\n    city: 'UP Chawk',\r\n    street: '5684 Max Summit',\r\n    type: 'address',\r\n  },\r\n];\r\n\r\nconst AccessControl = () => {\r\n  const [userId, setUserId] = React.useState(Object.keys(users)[0]);\r\n  const userPermissions = users[userId].permissions.map((id) => permissions[id]);\r\n\r\n  const actions = [\r\n    ...userPermissions.reduce((collection, { action }) => {\r\n      collection.add(action);\r\n      return collection;\r\n    }, new Set()),\r\n  ];\r\n\r\n  const ability = defineAbility((can) => {\r\n    userPermissions.forEach(({ action, subject }) => {\r\n      can(action, subject);\r\n    });\r\n  });\r\n  return (\r\n    <Row>\r\n      <Col lg=\"12\">\r\n        {/* --------------------------------------------------------------------------------*/}\r\n        {/* Card-1*/}\r\n        {/* --------------------------------------------------------------------------------*/}\r\n        <ComponentCard title=\"Roll base Access\">\r\n          <ButtonGroup>\r\n            {Object.entries(users).map(([id]) => (\r\n              <Button\r\n                key={id}\r\n                outline={userId !== id}\r\n                color=\"primary\"\r\n                onClick={() => setUserId(id)}\r\n              >\r\n                {id}\r\n              </Button>\r\n            ))}\r\n          </ButtonGroup>\r\n          <div className=\"p-3 bg-light mt-3\">\r\n            {users[userId].permissions.map((permission) => (\r\n              <div key={permission}>{permission}</div>\r\n            ))}\r\n          </div>\r\n          <ListGroup className=\"mt-4\">\r\n            {addresses.map(({ city, street, type, id }) => (\r\n\r\n              <ListGroupItem key={id}>\r\n              \r\n                  {city}, {street}\r\n                  {actions.map((action) => {\r\n                    return (\r\n                      <React.Fragment key={action}>\r\n                        <Can I={action} a={type} ability={ability} >\r\n                          <Button className=\"mx-1\" size=\"sm\">\r\n                            {action}\r\n                          </Button>\r\n                        </Can>\r\n                      </React.Fragment>\r\n                    )\r\n                  })}\r\n              </ListGroupItem>\r\n            ))}\r\n          </ListGroup>\r\n        </ComponentCard>\r\n      </Col>\r\n    </Row>\r\n  );\r\n};\r\n\r\nexport default AccessControl;"],"names":["_ref","children","title","subtitle","_jsxs","Card","_jsx","CardTitle","tag","className","CardBody","CardSubtitle","permissions","CanEdit","action","subject","CanDelete","users","admin","Manager","SubscriberReadOnly","addresses","id","city","street","type","AccessControl","userId","setUserId","React","Object","keys","userPermissions","map","actions","reduce","collection","add","Set","ability","defineAbility","can","forEach","_ref2","Row","Col","lg","ComponentCard","ButtonGroup","entries","_ref3","Button","outline","color","onClick","permission","ListGroup","_ref4","ListGroupItem","Can","I","a","size"],"sourceRoot":""}