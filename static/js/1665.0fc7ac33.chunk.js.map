{"version":3,"file":"static/js/1665.0fc7ac33.chunk.js","mappings":"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","sources":["../node_modules/reactstrap/esm/CloseButton.js","../node_modules/reactstrap/esm/Button.js","../node_modules/reactstrap/esm/ButtonGroup.js","../node_modules/reactstrap/esm/Card.js","../node_modules/reactstrap/esm/CardBody.js","../node_modules/reactstrap/esm/CardSubtitle.js","../node_modules/reactstrap/esm/CardTitle.js","../node_modules/reactstrap/esm/Col.js","../node_modules/reactstrap/esm/ListGroup.js","../node_modules/reactstrap/esm/ListGroupItem.js","../node_modules/reactstrap/esm/Row.js","../node_modules/@ucast/core/src/Condition.ts","../node_modules/@ucast/core/src/utils.ts","../node_modules/@ucast/core/src/builder.ts","../node_modules/@ucast/core/src/parsers/defaultInstructionParsers.ts","../node_modules/@ucast/core/src/parsers/ObjectQueryParser.ts","../node_modules/@ucast/core/src/interpreter.ts","../node_modules/@ucast/core/src/index.ts","../node_modules/@ucast/mongo/src/instructions.ts","../node_modules/@ucast/mongo/src/MongoQueryParser.ts","../node_modules/@ucast/mongo/src/index.ts","../node_modules/@ucast/js/src/utils.ts","../node_modules/@ucast/js/src/interpreter.ts","../node_modules/@ucast/js/src/interpreters.ts","../node_modules/@ucast/js/src/defaults.ts","../node_modules/@ucast/mongo2js/src/factory.ts","../node_modules/@ucast/core/src/translator.ts","../node_modules/@casl/ability/src/utils.ts","../node_modules/@casl/ability/src/Rule.ts","../node_modules/@casl/ability/src/structures/LinkedItem.ts","../node_modules/@casl/ability/src/RuleIndex.ts","../node_modules/@casl/ability/src/PureAbility.ts","../node_modules/@casl/ability/src/matchers/conditions.ts","../node_modules/@casl/ability/src/matchers/field.ts","../node_modules/@casl/ability/src/Ability.ts","../node_modules/@casl/ability/src/AbilityBuilder.ts","../node_modules/@casl/ability/src/ForbiddenError.ts","../node_modules/@casl/react/src/Can.ts"],"sourcesContent":["var _excluded = [\"className\", \"cssModule\", \"variant\", \"innerRef\"];\nfunction _extends() { _extends = Object.assign ? Object.assign.bind() : function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); enumerableOnly && (symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; })), keys.push.apply(keys, symbols); } return keys; }\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = null != arguments[i] ? arguments[i] : {}; i % 2 ? ownKeys(Object(source), !0).forEach(function (key) { _defineProperty(target, key, source[key]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } return target; }\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport { mapToCssModules } from './utils';\nvar propTypes = {\n  /** Disable the button if needed */\n  active: PropTypes.bool,\n  /** Aria label */\n  'aria-label': PropTypes.string,\n  /** Function to be triggered on click */\n  onClick: PropTypes.func,\n  /** Change the variant to white */\n  variant: PropTypes.oneOf(['white']),\n  className: PropTypes.string,\n  cssModule: PropTypes.object,\n  innerRef: PropTypes.oneOfType([PropTypes.object, PropTypes.string, PropTypes.func])\n};\nfunction CloseButton(props) {\n  var className = props.className,\n    cssModule = props.cssModule,\n    variant = props.variant,\n    innerRef = props.innerRef,\n    attributes = _objectWithoutProperties(props, _excluded);\n  var classes = mapToCssModules(classNames(className, 'btn-close', variant && \"btn-close-\".concat(variant)));\n  return /*#__PURE__*/React.createElement(\"button\", _extends({\n    ref: innerRef,\n    type: \"button\",\n    className: classes\n  }, _objectSpread({\n    'aria-label': 'close'\n  }, attributes)));\n}\nCloseButton.propTypes = propTypes;\nexport default CloseButton;","var _excluded = [\"active\", \"aria-label\", \"block\", \"className\", \"close\", \"cssModule\", \"color\", \"outline\", \"size\", \"tag\", \"innerRef\"];\nfunction _extends() { _extends = Object.assign ? Object.assign.bind() : function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\nimport React, { useCallback } from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport { mapToCssModules, tagPropType } from './utils';\nimport CloseButton from './CloseButton';\nvar propTypes = {\n  /** Manually set the visual state of the button to active */\n  active: PropTypes.bool,\n  /** Aria label */\n  'aria-label': PropTypes.string,\n  block: PropTypes.bool,\n  /** Pass children so this component can wrap them */\n  children: PropTypes.node,\n  /** Add custom class */\n  className: PropTypes.string,\n  /** Change existing className with a new className */\n  cssModule: PropTypes.object,\n  /** Use the button as a close button */\n  close: PropTypes.bool,\n  /** Change color of Button to one of the available colors */\n  color: PropTypes.string,\n  /** Disables the button */\n  disabled: PropTypes.bool,\n  innerRef: PropTypes.oneOfType([PropTypes.object, PropTypes.func, PropTypes.string]),\n  /** Function to be triggered on click */\n  onClick: PropTypes.func,\n  /** Adds outline to the button */\n  outline: PropTypes.bool,\n  /** Make the button bigger or smaller */\n  size: PropTypes.string,\n  /** Set a custom element for this component */\n  tag: tagPropType\n};\nfunction Button(props) {\n  var onClick = useCallback(function (e) {\n    if (props.disabled) {\n      e.preventDefault();\n      return;\n    }\n    if (props.onClick) {\n      return props.onClick(e);\n    }\n  }, [props.onClick, props.disabled]);\n  var active = props.active,\n    ariaLabel = props['aria-label'],\n    block = props.block,\n    className = props.className,\n    close = props.close,\n    cssModule = props.cssModule,\n    _props$color = props.color,\n    color = _props$color === void 0 ? 'secondary' : _props$color,\n    outline = props.outline,\n    size = props.size,\n    _props$tag = props.tag,\n    Tag = _props$tag === void 0 ? 'button' : _props$tag,\n    innerRef = props.innerRef,\n    attributes = _objectWithoutProperties(props, _excluded);\n  if (close) {\n    return /*#__PURE__*/React.createElement(CloseButton, attributes);\n  }\n  var btnOutlineColor = \"btn\".concat(outline ? '-outline' : '', \"-\").concat(color);\n  var classes = mapToCssModules(classNames(className, 'btn', btnOutlineColor, size ? \"btn-\".concat(size) : false, block ? 'd-block w-100' : false, {\n    active: active,\n    disabled: props.disabled\n  }), cssModule);\n  if (attributes.href && Tag === 'button') {\n    Tag = 'a';\n  }\n  return /*#__PURE__*/React.createElement(Tag, _extends({\n    type: Tag === 'button' && attributes.onClick ? 'button' : undefined\n  }, attributes, {\n    className: classes,\n    ref: innerRef,\n    onClick: onClick,\n    \"aria-label\": ariaLabel\n  }));\n}\nButton.propTypes = propTypes;\nexport default Button;","var _excluded = [\"className\", \"cssModule\", \"size\", \"vertical\", \"tag\"];\nfunction _extends() { _extends = Object.assign ? Object.assign.bind() : function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); enumerableOnly && (symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; })), keys.push.apply(keys, symbols); } return keys; }\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = null != arguments[i] ? arguments[i] : {}; i % 2 ? ownKeys(Object(source), !0).forEach(function (key) { _defineProperty(target, key, source[key]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } return target; }\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport { mapToCssModules, tagPropType } from './utils';\nvar propTypes = {\n  /** Aria label */\n  'aria-label': PropTypes.string,\n  /** Add custom class */\n  className: PropTypes.string,\n  /** Change underlying component's CSS base class name */\n  cssModule: PropTypes.object,\n  /** In order for assistive technologies (such as screen readers) to convey that a series of buttons is grouped, an appropriate role attribute needs to be provided. For button groups, this would be role=\"group\", while toolbars should have a role=\"toolbar\". */\n  role: PropTypes.string,\n  /** Make the button bigger or smaller */\n  size: PropTypes.string,\n  /** Set a custom element for this component */\n  tag: tagPropType,\n  /** Make button group vertical */\n  vertical: PropTypes.bool\n};\nfunction ButtonGroup(props) {\n  var className = props.className,\n    cssModule = props.cssModule,\n    size = props.size,\n    vertical = props.vertical,\n    _props$tag = props.tag,\n    Tag = _props$tag === void 0 ? 'div' : _props$tag,\n    attributes = _objectWithoutProperties(props, _excluded);\n  var classes = mapToCssModules(classNames(className, size ? 'btn-group-' + size : false, vertical ? 'btn-group-vertical' : 'btn-group'), cssModule);\n  return /*#__PURE__*/React.createElement(Tag, _extends({}, _objectSpread({\n    role: 'group'\n  }, attributes), {\n    className: classes\n  }));\n}\nButtonGroup.propTypes = propTypes;\nexport default ButtonGroup;","var _excluded = [\"className\", \"cssModule\", \"color\", \"body\", \"inverse\", \"outline\", \"tag\", \"innerRef\"];\nfunction _extends() { _extends = Object.assign ? Object.assign.bind() : function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport { mapToCssModules, tagPropType } from './utils';\nvar propTypes = {\n  /** Toggles card padding using `.card-body` */\n  body: PropTypes.bool,\n  /** Add custom class */\n  className: PropTypes.string,\n  /** Change background color of component */\n  color: PropTypes.string,\n  /** Change underlying component's CSS base class name */\n  cssModule: PropTypes.object,\n  innerRef: PropTypes.oneOfType([PropTypes.object, PropTypes.string, PropTypes.func]),\n  /** Inverts the color */\n  inverse: PropTypes.bool,\n  /** Changes the card to have only outline */\n  outline: PropTypes.bool,\n  /** Set a custom element for this component */\n  tag: tagPropType\n};\nfunction Card(props) {\n  var className = props.className,\n    cssModule = props.cssModule,\n    color = props.color,\n    body = props.body,\n    inverse = props.inverse,\n    outline = props.outline,\n    _props$tag = props.tag,\n    Tag = _props$tag === void 0 ? 'div' : _props$tag,\n    innerRef = props.innerRef,\n    attributes = _objectWithoutProperties(props, _excluded);\n  var classes = mapToCssModules(classNames(className, 'card', inverse ? 'text-white' : false, body ? 'card-body' : false, color ? \"\".concat(outline ? 'border' : 'bg', \"-\").concat(color) : false), cssModule);\n  return /*#__PURE__*/React.createElement(Tag, _extends({}, attributes, {\n    className: classes,\n    ref: innerRef\n  }));\n}\nCard.propTypes = propTypes;\nexport default Card;","var _excluded = [\"className\", \"cssModule\", \"innerRef\", \"tag\"];\nfunction _extends() { _extends = Object.assign ? Object.assign.bind() : function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport { mapToCssModules, tagPropType } from './utils';\nvar propTypes = {\n  /** Add custom class */\n  className: PropTypes.string,\n  /** Change underlying component's CSS base class name */\n  cssModule: PropTypes.object,\n  innerRef: PropTypes.oneOfType([PropTypes.object, PropTypes.string, PropTypes.func]),\n  /** Set a custom element for this component */\n  tag: tagPropType\n};\nfunction CardBody(props) {\n  var className = props.className,\n    cssModule = props.cssModule,\n    innerRef = props.innerRef,\n    _props$tag = props.tag,\n    Tag = _props$tag === void 0 ? 'div' : _props$tag,\n    attributes = _objectWithoutProperties(props, _excluded);\n  var classes = mapToCssModules(classNames(className, 'card-body'), cssModule);\n  return /*#__PURE__*/React.createElement(Tag, _extends({}, attributes, {\n    className: classes,\n    ref: innerRef\n  }));\n}\nCardBody.propTypes = propTypes;\nexport default CardBody;","var _excluded = [\"className\", \"cssModule\", \"tag\"];\nfunction _extends() { _extends = Object.assign ? Object.assign.bind() : function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport { mapToCssModules, tagPropType } from './utils';\nvar propTypes = {\n  /** Add custom class */\n  className: PropTypes.string,\n  /** Change underlying component's CSS base class name */\n  cssModule: PropTypes.object,\n  /** Set a custom element for this component */\n  tag: tagPropType\n};\nfunction CardSubtitle(props) {\n  var className = props.className,\n    cssModule = props.cssModule,\n    _props$tag = props.tag,\n    Tag = _props$tag === void 0 ? 'div' : _props$tag,\n    attributes = _objectWithoutProperties(props, _excluded);\n  var classes = mapToCssModules(classNames(className, 'card-subtitle'), cssModule);\n  return /*#__PURE__*/React.createElement(Tag, _extends({}, attributes, {\n    className: classes\n  }));\n}\nCardSubtitle.propTypes = propTypes;\nexport default CardSubtitle;","var _excluded = [\"className\", \"cssModule\", \"tag\"];\nfunction _extends() { _extends = Object.assign ? Object.assign.bind() : function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport { mapToCssModules, tagPropType } from './utils';\nvar propTypes = {\n  /** Add custom class */\n  className: PropTypes.string,\n  /** Change underlying component's CSS base class name */\n  cssModule: PropTypes.object,\n  /** Set a custom element for this component */\n  tag: tagPropType\n};\nfunction CardTitle(props) {\n  var className = props.className,\n    cssModule = props.cssModule,\n    _props$tag = props.tag,\n    Tag = _props$tag === void 0 ? 'div' : _props$tag,\n    attributes = _objectWithoutProperties(props, _excluded);\n  var classes = mapToCssModules(classNames(className, 'card-title'), cssModule);\n  return /*#__PURE__*/React.createElement(Tag, _extends({}, attributes, {\n    className: classes\n  }));\n}\nCardTitle.propTypes = propTypes;\nexport default CardTitle;","var _excluded = [\"className\", \"cssModule\", \"widths\", \"tag\"];\nfunction _extends() { _extends = Object.assign ? Object.assign.bind() : function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport { mapToCssModules, tagPropType, isObject } from './utils';\nvar colWidths = ['xs', 'sm', 'md', 'lg', 'xl', 'xxl'];\nvar stringOrNumberProp = PropTypes.oneOfType([PropTypes.number, PropTypes.string]);\nvar columnProps = PropTypes.oneOfType([PropTypes.bool, PropTypes.number, PropTypes.string, PropTypes.shape({\n  size: PropTypes.oneOfType([PropTypes.bool, PropTypes.number, PropTypes.string]),\n  order: stringOrNumberProp,\n  offset: stringOrNumberProp\n})]);\nvar propTypes = {\n  tag: tagPropType,\n  xs: columnProps,\n  sm: columnProps,\n  md: columnProps,\n  lg: columnProps,\n  xl: columnProps,\n  xxl: columnProps,\n  className: PropTypes.string,\n  cssModule: PropTypes.object,\n  widths: PropTypes.array\n};\nvar getColumnSizeClass = function getColumnSizeClass(isXs, colWidth, colSize) {\n  if (colSize === true || colSize === '') {\n    return isXs ? 'col' : \"col-\".concat(colWidth);\n  }\n  if (colSize === 'auto') {\n    return isXs ? 'col-auto' : \"col-\".concat(colWidth, \"-auto\");\n  }\n  return isXs ? \"col-\".concat(colSize) : \"col-\".concat(colWidth, \"-\").concat(colSize);\n};\nexport var getColumnClasses = function getColumnClasses(attributes, cssModule) {\n  var widths = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : colWidths;\n  var modifiedAttributes = attributes;\n  var colClasses = [];\n  widths.forEach(function (colWidth, i) {\n    var columnProp = modifiedAttributes[colWidth];\n    delete modifiedAttributes[colWidth];\n    if (!columnProp && columnProp !== '') {\n      return;\n    }\n    var isXs = !i;\n    if (isObject(columnProp)) {\n      var _classNames;\n      var colSizeInterfix = isXs ? '-' : \"-\".concat(colWidth, \"-\");\n      var colClass = getColumnSizeClass(isXs, colWidth, columnProp.size);\n      colClasses.push(mapToCssModules(classNames((_classNames = {}, _defineProperty(_classNames, colClass, columnProp.size || columnProp.size === ''), _defineProperty(_classNames, \"order\".concat(colSizeInterfix).concat(columnProp.order), columnProp.order || columnProp.order === 0), _defineProperty(_classNames, \"offset\".concat(colSizeInterfix).concat(columnProp.offset), columnProp.offset || columnProp.offset === 0), _classNames)), cssModule));\n    } else {\n      var _colClass = getColumnSizeClass(isXs, colWidth, columnProp);\n      colClasses.push(_colClass);\n    }\n  });\n  return {\n    colClasses: colClasses,\n    modifiedAttributes: modifiedAttributes\n  };\n};\nfunction Col(props) {\n  var className = props.className,\n    cssModule = props.cssModule,\n    _props$widths = props.widths,\n    widths = _props$widths === void 0 ? colWidths : _props$widths,\n    _props$tag = props.tag,\n    Tag = _props$tag === void 0 ? 'div' : _props$tag,\n    attributes = _objectWithoutProperties(props, _excluded);\n  var _getColumnClasses = getColumnClasses(attributes, cssModule, widths),\n    modifiedAttributes = _getColumnClasses.modifiedAttributes,\n    colClasses = _getColumnClasses.colClasses;\n  if (!colClasses.length) {\n    colClasses.push('col');\n  }\n  var classes = mapToCssModules(classNames(className, colClasses), cssModule);\n  return /*#__PURE__*/React.createElement(Tag, _extends({}, modifiedAttributes, {\n    className: classes\n  }));\n}\nCol.propTypes = propTypes;\nexport default Col;","var _excluded = [\"className\", \"cssModule\", \"tag\", \"flush\", \"horizontal\", \"numbered\"];\nfunction _extends() { _extends = Object.assign ? Object.assign.bind() : function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport { mapToCssModules, tagPropType } from './utils';\nvar propTypes = {\n  /** Add custom class */\n  className: PropTypes.string,\n  /** Change underlying component's CSS base class name */\n  cssModule: PropTypes.object,\n  /** Remove borders to make the list appear flush */\n  flush: PropTypes.bool,\n  /** Make the list horizontal instead of vertical */\n  horizontal: PropTypes.oneOfType([PropTypes.bool, PropTypes.string]),\n  /** Add number to the ListItems */\n  numbered: PropTypes.bool,\n  /** Set a custom element for this component */\n  tag: tagPropType\n};\nvar getHorizontalClass = function getHorizontalClass(horizontal) {\n  if (horizontal === false) {\n    return false;\n  }\n  if (horizontal === true || horizontal === 'xs') {\n    return 'list-group-horizontal';\n  }\n  return \"list-group-horizontal-\".concat(horizontal);\n};\nfunction ListGroup(props) {\n  var className = props.className,\n    cssModule = props.cssModule,\n    _props$tag = props.tag,\n    Tag = _props$tag === void 0 ? 'ul' : _props$tag,\n    flush = props.flush,\n    _props$horizontal = props.horizontal,\n    horizontal = _props$horizontal === void 0 ? false : _props$horizontal,\n    _props$numbered = props.numbered,\n    numbered = _props$numbered === void 0 ? false : _props$numbered,\n    attributes = _objectWithoutProperties(props, _excluded);\n  var classes = mapToCssModules(classNames(className, 'list-group',\n  // list-group-horizontal cannot currently be mixed with list-group-flush\n  // we only try to apply horizontal classes if flush is false\n  flush ? 'list-group-flush' : getHorizontalClass(horizontal), {\n    'list-group-numbered': numbered\n  }), cssModule);\n  return /*#__PURE__*/React.createElement(Tag, _extends({}, attributes, {\n    className: classes\n  }));\n}\nListGroup.propTypes = propTypes;\nexport default ListGroup;","var _excluded = [\"className\", \"cssModule\", \"tag\", \"active\", \"disabled\", \"action\", \"color\"];\nfunction _extends() { _extends = Object.assign ? Object.assign.bind() : function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport { mapToCssModules, tagPropType } from './utils';\nvar propTypes = {\n  /** Add action prop to give effects while hovering over element */\n  action: PropTypes.bool,\n  /** Add active prop to make the current selection active */\n  active: PropTypes.bool,\n  /** Add custom class */\n  className: PropTypes.string,\n  /** Change underlying component's CSS base class name */\n  cssModule: PropTypes.object,\n  /** Add background colour to the list item */\n  color: PropTypes.string,\n  /** Make the list item appear disabled */\n  disabled: PropTypes.bool,\n  /** Set a custom element for this component */\n  tag: tagPropType\n};\nvar handleDisabledOnClick = function handleDisabledOnClick(e) {\n  e.preventDefault();\n};\nfunction ListGroupItem(props) {\n  var className = props.className,\n    cssModule = props.cssModule,\n    _props$tag = props.tag,\n    Tag = _props$tag === void 0 ? 'li' : _props$tag,\n    active = props.active,\n    disabled = props.disabled,\n    action = props.action,\n    color = props.color,\n    attributes = _objectWithoutProperties(props, _excluded);\n  var classes = mapToCssModules(classNames(className, active ? 'active' : false, disabled ? 'disabled' : false, action ? 'list-group-item-action' : false, color ? \"list-group-item-\".concat(color) : false, 'list-group-item'), cssModule);\n\n  // Prevent click event when disabled.\n  if (disabled) {\n    attributes.onClick = handleDisabledOnClick;\n  }\n  return /*#__PURE__*/React.createElement(Tag, _extends({}, attributes, {\n    className: classes\n  }));\n}\nListGroupItem.propTypes = propTypes;\nexport default ListGroupItem;","var _excluded = [\"className\", \"cssModule\", \"noGutters\", \"tag\", \"widths\"];\nfunction _extends() { _extends = Object.assign ? Object.assign.bind() : function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport { mapToCssModules, tagPropType, deprecated } from './utils';\nvar rowColWidths = ['xs', 'sm', 'md', 'lg', 'xl', 'xxl'];\nvar rowColsPropType = PropTypes.oneOfType([PropTypes.number, PropTypes.string]);\nvar propTypes = {\n  tag: tagPropType,\n  noGutters: deprecated(PropTypes.bool, 'Please use Bootstrap 5 gutter utility classes. https://getbootstrap.com/docs/5.0/layout/gutters/'),\n  className: PropTypes.string,\n  cssModule: PropTypes.object,\n  xs: rowColsPropType,\n  sm: rowColsPropType,\n  md: rowColsPropType,\n  lg: rowColsPropType,\n  xl: rowColsPropType,\n  xxl: rowColsPropType,\n  widths: PropTypes.array\n};\nfunction Row(props) {\n  var className = props.className,\n    cssModule = props.cssModule,\n    noGutters = props.noGutters,\n    _props$tag = props.tag,\n    Tag = _props$tag === void 0 ? 'div' : _props$tag,\n    _props$widths = props.widths,\n    widths = _props$widths === void 0 ? rowColWidths : _props$widths,\n    attributes = _objectWithoutProperties(props, _excluded);\n  var colClasses = [];\n  widths.forEach(function (colWidth, i) {\n    var colSize = props[colWidth];\n    delete attributes[colWidth];\n    if (!colSize) {\n      return;\n    }\n    var isXs = !i;\n    colClasses.push(isXs ? \"row-cols-\".concat(colSize) : \"row-cols-\".concat(colWidth, \"-\").concat(colSize));\n  });\n  var classes = mapToCssModules(classNames(className, noGutters ? 'gx-0' : null, 'row', colClasses), cssModule);\n  return /*#__PURE__*/React.createElement(Tag, _extends({}, attributes, {\n    className: classes\n  }));\n}\nRow.propTypes = propTypes;\nexport default Row;","export interface Note<T> {\n  type: string\n  message?: string\n  originalValue?: T\n}\n\nexport abstract class Condition<T = unknown> {\n  private _notes!: Note<T>[];\n\n  constructor(\n    public readonly operator: string,\n    public readonly value: T\n  ) {\n    Object.defineProperty(this, '_notes', {\n      writable: true\n    });\n  }\n\n  get notes(): ReadonlyArray<Note<T>> | undefined {\n    return this._notes;\n  }\n\n  addNote(note: Note<T>) {\n    this._notes = this._notes || [];\n    this._notes.push(note);\n  }\n}\n\nexport class DocumentCondition<T> extends Condition<T> {\n}\n\nexport class CompoundCondition<T extends Condition = Condition> extends DocumentCondition<T[]> {\n  constructor(operator: string, conditions: T[]) {\n    if (!Array.isArray(conditions)) {\n      throw new Error(`\"${operator}\" operator expects to receive an array of conditions`);\n    }\n\n    super(operator, conditions);\n  }\n}\n\nexport const ITSELF = '__itself__';\nexport class FieldCondition<T = unknown> extends Condition<T> {\n  public readonly field!: string | typeof ITSELF;\n\n  constructor(operator: string, field: string | typeof ITSELF, value: T) {\n    super(operator, value);\n    this.field = field;\n  }\n}\n\nexport const NULL_CONDITION = new DocumentCondition('__null__', null);\nexport type ConditionValue<T> = T extends Condition<infer V> ? V : unknown;\n","import { Condition, CompoundCondition, NULL_CONDITION } from './Condition';\n\nconst hasOwnProperty = Object.prototype.hasOwnProperty.call.bind(Object.prototype.hasOwnProperty);\n\nexport function isCompound(operator: string, condition: Condition): condition is CompoundCondition {\n  return condition instanceof CompoundCondition && condition.operator === operator;\n}\n\nfunction flattenConditions<T extends Condition>(\n  operator: string,\n  conditions: T[],\n  aggregatedResult?: T[]\n) {\n  const flatConditions: T[] = aggregatedResult || [];\n\n  for (let i = 0, length = conditions.length; i < length; i++) {\n    const currentNode = conditions[i];\n\n    if (isCompound(operator, currentNode)) {\n      flattenConditions(operator, currentNode.value as T[], flatConditions);\n    } else {\n      flatConditions.push(currentNode);\n    }\n  }\n\n  return flatConditions;\n}\n\nexport function optimizedCompoundCondition<T extends Condition>(operator: string, conditions: T[]) {\n  if (conditions.length === 1) {\n    return conditions[0];\n  }\n\n  return new CompoundCondition(operator, flattenConditions(operator, conditions));\n}\n\nexport const identity = <T>(x: T) => x;\nexport const object = () => Object.create(null);\n\nexport const ignoreValue: IgnoreValue = Object.defineProperty(object(), '__@type@__', {\n  value: 'ignore value'\n});\nexport interface IgnoreValue {\n  readonly ['__@type@__']: 'ignore value'\n}\n\nexport function hasOperators<T>(\n  value: any,\n  instructions: Record<string, unknown>,\n  skipIgnore = false,\n): value is T {\n  if (!value || value && value.constructor !== Object) {\n    return false;\n  }\n\n  for (const prop in value) { // eslint-disable-line no-restricted-syntax, guard-for-in\n    const hasProp = hasOwnProperty(value, prop) && hasOwnProperty(instructions, prop);\n    if (hasProp && (!skipIgnore || value[prop] !== ignoreValue)) {\n      return true;\n    }\n  }\n\n  return false;\n}\n\nexport function objectKeysSkipIgnore(anyObject: Record<string, unknown>) {\n  const keys: string[] = [];\n  for (const key in anyObject) { // eslint-disable-line no-restricted-syntax\n    if (hasOwnProperty(anyObject, key) && anyObject[key] !== ignoreValue) {\n      keys.push(key);\n    }\n  }\n\n  return keys;\n}\n\nexport function pushIfNonNullCondition(conditions: Condition[], condition: Condition) {\n  if (condition !== NULL_CONDITION) {\n    conditions.push(condition);\n  }\n}\n","import { Condition } from './Condition';\nimport { optimizedCompoundCondition } from './utils';\n\nexport const buildAnd = (conditions: Condition[]) => optimizedCompoundCondition('and', conditions);\nexport const buildOr = (conditions: Condition[]) => optimizedCompoundCondition('or', conditions);\n","import {\n  FieldCondition,\n  CompoundCondition,\n  DocumentCondition,\n} from '../Condition';\nimport {\n  DocumentInstruction,\n  CompoundInstruction,\n  FieldInstruction,\n} from '../types';\n\ninterface DefaultParsers {\n  compound: Exclude<CompoundInstruction['parse'], undefined>,\n  field: Exclude<FieldInstruction['parse'], undefined>,\n  document: Exclude<DocumentInstruction['parse'], undefined>\n}\n\nexport const defaultInstructionParsers: DefaultParsers = {\n  compound(instruction, value, context) {\n    const queries = Array.isArray(value) ? value : [value];\n    const conditions = queries.map(query => context.parse(query));\n    return new CompoundCondition(instruction.name, conditions);\n  },\n  field(instruction, value, context) {\n    return new FieldCondition(instruction.name, context.field, value);\n  },\n  document(instruction, value) {\n    return new DocumentCondition(instruction.name, value);\n  }\n};\n","import { Condition } from '../Condition';\nimport {\n  NamedInstruction,\n  ParsingInstruction,\n  FieldParsingContext,\n  ParsingContext,\n} from '../types';\nimport { buildAnd } from '../builder';\nimport { defaultInstructionParsers } from './defaultInstructionParsers';\nimport {\n  identity,\n  hasOperators,\n  object,\n  pushIfNonNullCondition,\n  objectKeysSkipIgnore,\n} from '../utils';\n\nexport type FieldQueryOperators<T extends {}> = {\n  [K in keyof T]: T[K] extends {} ? T[K] : never\n}[keyof T];\n\ntype ParsingInstructions = Record<string, NamedInstruction>;\n\nexport interface QueryOptions {\n  operatorToConditionName?(name: string): string\n  defaultOperatorName?: string\n  fieldContext?: Record<string, unknown>\n  documentContext?: Record<string, unknown>\n  useIgnoreValue?: boolean\n  mergeFinalConditions?(conditions: Condition[]): Condition\n}\n\nexport type ObjectQueryFieldParsingContext = ParsingContext<FieldParsingContext & {\n  query: {},\n  hasOperators<T>(value: unknown): value is T\n}>;\n\nexport class ObjectQueryParser<\n  T extends Record<any, any>,\n  U extends FieldQueryOperators<T> = FieldQueryOperators<T>\n> {\n  private readonly _instructions: ParsingInstructions;\n  private _fieldInstructionContext: ObjectQueryFieldParsingContext;\n  private _documentInstructionContext: ParsingContext<{ query: {} }>;\n  private readonly _options: Required<\n  Pick<QueryOptions, 'operatorToConditionName' | 'defaultOperatorName' | 'mergeFinalConditions'>\n  >;\n\n  private readonly _objectKeys: typeof Object.keys;\n\n  constructor(instructions: Record<string, ParsingInstruction>, options: QueryOptions = object()) {\n    this.parse = this.parse.bind(this);\n    this._options = {\n      operatorToConditionName: options.operatorToConditionName || identity,\n      defaultOperatorName: options.defaultOperatorName || 'eq',\n      mergeFinalConditions: options.mergeFinalConditions || buildAnd,\n    };\n    this._instructions = Object.keys(instructions).reduce((all, name) => {\n      all[name] = { name: this._options.operatorToConditionName(name), ...instructions[name] };\n      return all;\n    }, {} as ParsingInstructions);\n    this._fieldInstructionContext = {\n      ...options.fieldContext,\n      field: '',\n      query: {},\n      parse: this.parse,\n      hasOperators: <T>(value: unknown): value is T => hasOperators(\n        value,\n        this._instructions,\n        options.useIgnoreValue\n      ),\n    };\n    this._documentInstructionContext = {\n      ...options.documentContext,\n      parse: this.parse,\n      query: {}\n    };\n    this._objectKeys = options.useIgnoreValue ? objectKeysSkipIgnore : Object.keys;\n  }\n\n  setParse(parse: this['parse']) {\n    this.parse = parse;\n    this._fieldInstructionContext.parse = parse;\n    this._documentInstructionContext.parse = parse;\n  }\n\n  protected parseField(field: string, operator: string, value: unknown, parentQuery: {}) {\n    const instruction = this._instructions[operator];\n\n    if (!instruction) {\n      throw new Error(`Unsupported operator \"${operator}\"`);\n    }\n\n    if (instruction.type !== 'field') {\n      throw new Error(`Unexpected ${instruction.type} operator \"${operator}\" at field level`);\n    }\n\n    this._fieldInstructionContext.field = field;\n    this._fieldInstructionContext.query = parentQuery;\n\n    return this.parseInstruction(instruction, value, this._fieldInstructionContext);\n  }\n\n  // eslint-disable-next-line class-methods-use-this\n  protected parseInstruction(\n    instruction: NamedInstruction,\n    value: unknown,\n    context: ParsingContext<{}>\n  ) {\n    if (typeof instruction.validate === 'function') {\n      instruction.validate(instruction, value);\n    }\n\n    const parse: typeof instruction.parse = instruction.parse\n      || defaultInstructionParsers[instruction.type as keyof typeof defaultInstructionParsers];\n    return parse(instruction, value, context);\n  }\n\n  protected parseFieldOperators(field: string, value: U) {\n    const conditions: Condition[] = [];\n    const keys = this._objectKeys(value);\n\n    for (let i = 0, length = keys.length; i < length; i++) {\n      const op = keys[i];\n      const instruction = this._instructions[op];\n\n      if (!instruction) {\n        throw new Error(`Field query for \"${field}\" may contain only operators or a plain object as a value`);\n      }\n\n      const condition = this.parseField(field, op, value[op as keyof U], value);\n      pushIfNonNullCondition(conditions, condition);\n    }\n\n    return conditions;\n  }\n\n  parse<Q extends T>(query: Q): Condition {\n    const conditions = [];\n    const keys = this._objectKeys(query);\n\n    this._documentInstructionContext.query = query;\n\n    for (let i = 0, length = keys.length; i < length; i++) {\n      const key = keys[i];\n      const value = query[key];\n      const instruction = this._instructions[key];\n\n      if (instruction) {\n        if (instruction.type !== 'document' && instruction.type !== 'compound') {\n          throw new Error(`Cannot use parsing instruction for operator \"${key}\" in \"document\" context as it is supposed to be used in  \"${instruction.type}\" context`);\n        }\n\n        pushIfNonNullCondition(\n          conditions,\n          this.parseInstruction(instruction, value, this._documentInstructionContext)\n        );\n      } else if (this._fieldInstructionContext.hasOperators<U>(value)) {\n        conditions.push(...this.parseFieldOperators(key, value));\n      } else {\n        pushIfNonNullCondition(\n          conditions,\n          this.parseField(key, this._options.defaultOperatorName, value, query)\n        );\n      }\n    }\n\n    return this._options.mergeFinalConditions(conditions);\n  }\n}\n","import { Condition } from './Condition';\n\ntype ArgsExceptLast<F extends (...args: any[]) => any> =\n  F extends (a: any, c: any) => any\n    ? Parameters<(condition: Condition) => 0>\n    : F extends (a: any, b: any, c: any) => any\n      ? Parameters<(condition: Condition, value: Parameters<F>[1]) => 0>\n      : Parameters<(\n        condition: Condition,\n        value: Parameters<F>[1],\n        options: Parameters<F>[2],\n        ...args: unknown[]\n      ) => 0>;\n\nexport type Interpreter<T extends Condition, R> = (condition: T, ...args: any[]) => R;\nexport type AnyInterpreter = Interpreter<any, any>;\nexport interface InterpretationContext<T extends AnyInterpreter> {\n  interpret(...args: ArgsExceptLast<T>): ReturnType<T>;\n}\n\nfunction getInterpreter<T extends Record<string, AnyInterpreter>>(\n  interpreters: T,\n  operator: keyof T\n) {\n  const interpret = interpreters[operator];\n\n  if (typeof interpret !== 'function') {\n    throw new Error(`Unable to interpret \"${operator}\" condition. Did you forget to register interpreter for it?`);\n  }\n\n  return interpret;\n}\n\nexport interface InterpreterOptions {\n  numberOfArguments?: 1 | 2 | 3\n  getInterpreterName?(condition: Condition, context: this): string\n}\n\nfunction defaultInterpreterName(condition: Condition) {\n  return condition.operator;\n}\n\nexport function createInterpreter<T extends AnyInterpreter, U extends {} = {}>(\n  interpreters: Record<string, T>,\n  rawOptions?: U\n) {\n  const options = rawOptions as U & InterpreterOptions;\n  const getInterpreterName = options && options.getInterpreterName || defaultInterpreterName;\n  let interpret;\n\n  switch (options ? options.numberOfArguments : 0) {\n    case 1:\n      interpret = ((condition) => {\n        const interpreterName = getInterpreterName(condition, options);\n        const interpretOperator = getInterpreter(interpreters, interpreterName);\n        return interpretOperator(condition, defaultContext); // eslint-disable-line @typescript-eslint/no-use-before-define\n      }) as InterpretationContext<T>['interpret'];\n      break;\n    case 3:\n      interpret = ((condition, value, params) => {\n        const interpreterName = getInterpreterName(condition, options);\n        const interpretOperator = getInterpreter(interpreters, interpreterName);\n        return interpretOperator(condition, value, params, defaultContext); // eslint-disable-line @typescript-eslint/no-use-before-define\n      }) as InterpretationContext<T>['interpret'];\n      break;\n    default:\n      interpret = ((condition, value) => {\n        const interpreterName = getInterpreterName(condition, options);\n        const interpretOperator = getInterpreter(interpreters, interpreterName);\n        return interpretOperator(condition, value, defaultContext); // eslint-disable-line @typescript-eslint/no-use-before-define\n      }) as InterpretationContext<T>['interpret'];\n      break;\n  }\n\n  const defaultContext = {\n    ...options,\n    interpret,\n  } as InterpretationContext<T> & U;\n\n  return defaultContext.interpret;\n}\n","import { ObjectQueryParser } from './parsers/ObjectQueryParser';\n\nexport * from './Condition';\nexport * from './types';\nexport * from './interpreter';\nexport * from './translator';\nexport * from './builder';\nexport {\n  isCompound,\n  hasOperators,\n  identity,\n  object,\n  optimizedCompoundCondition,\n  ignoreValue,\n} from './utils';\nexport type {\n  IgnoreValue\n} from './utils';\nexport * from './parsers/ObjectQueryParser';\nexport * from './parsers/defaultInstructionParsers';\n/**\n * @deprecated use `ObjectQueryParser#parseInstruction` instead\n * TODO(major): remove\n */\nexport const parseInstruction = (ObjectQueryParser.prototype as any).parseInstruction;\n","import {\n  CompoundCondition,\n  FieldCondition,\n  NamedInstruction,\n  CompoundInstruction,\n  FieldInstruction,\n  DocumentInstruction,\n  Comparable,\n  ITSELF,\n  NULL_CONDITION,\n  FieldParsingContext,\n  optimizedCompoundCondition,\n  ObjectQueryFieldParsingContext,\n} from '@ucast/core';\nimport { MongoQuery } from './types';\n\nfunction ensureIsArray(instruction: NamedInstruction, value: unknown) {\n  if (!Array.isArray(value)) {\n    throw new Error(`\"${instruction.name}\" expects value to be an array`);\n  }\n}\n\nfunction ensureIsNonEmptyArray(instruction: NamedInstruction, value: unknown[]) {\n  ensureIsArray(instruction, value);\n\n  if (!value.length) {\n    throw new Error(`\"${instruction.name}\" expects to have at least one element in array`);\n  }\n}\n\nfunction ensureIsComparable(instruction: NamedInstruction, value: string | number | Date) {\n  const isComparable = typeof value === 'string' || typeof value === 'number' || value instanceof Date;\n\n  if (!isComparable) {\n    throw new Error(`\"${instruction.name}\" expects value to be comparable (i.e., string, number or date)`);\n  }\n}\n\nconst ensureIs = (type: string) => (instruction: NamedInstruction, value: unknown) => {\n  if (typeof value !== type) { // eslint-disable-line valid-typeof\n    throw new Error(`\"${instruction.name}\" expects value to be a \"${type}\"`);\n  }\n};\n\nexport const $and: CompoundInstruction<MongoQuery<any>[]> = {\n  type: 'compound',\n  validate: ensureIsNonEmptyArray,\n  parse(instruction, queries, { parse }) {\n    const conditions = queries.map(query => parse(query));\n    return optimizedCompoundCondition(instruction.name, conditions);\n  }\n};\nexport const $or = $and;\nexport const $nor: CompoundInstruction<MongoQuery<any>[]> = {\n  type: 'compound',\n  validate: ensureIsNonEmptyArray,\n};\n\nexport const $not: FieldInstruction<MongoQuery<any> | RegExp> = {\n  type: 'field',\n  validate(instruction, value) {\n    const isValid = value && (value instanceof RegExp || value.constructor === Object);\n\n    if (!isValid) {\n      throw new Error(`\"${instruction.name}\" expects to receive either regular expression or object of field operators`);\n    }\n  },\n  parse(instruction, value, context) {\n    const condition = value instanceof RegExp\n      ? new FieldCondition('regex' as typeof instruction.name, context.field, value)\n      : context.parse(value, context);\n\n    return new CompoundCondition(instruction.name, [condition]);\n  },\n};\nexport const $elemMatch: FieldInstruction<MongoQuery<any>, ObjectQueryFieldParsingContext> = {\n  type: 'field',\n  validate(instruction, value) {\n    if (!value || value.constructor !== Object) {\n      throw new Error(`\"${instruction.name}\" expects to receive an object with nested query or field level operators`);\n    }\n  },\n  parse(instruction, value, { parse, field, hasOperators }) {\n    const condition = hasOperators(value) ? parse(value, { field: ITSELF }) : parse(value);\n    return new FieldCondition(instruction.name, field, condition);\n  }\n};\n\nexport const $size: FieldInstruction<number> = {\n  type: 'field',\n  validate: ensureIs('number')\n};\nexport const $in: FieldInstruction<unknown[]> = {\n  type: 'field',\n  validate: ensureIsArray,\n};\nexport const $nin = $in;\nexport const $all = $in;\nexport const $mod: FieldInstruction<[number, number]> = {\n  type: 'field',\n  validate(instruction, value) {\n    if (!Array.isArray(value) || value.length !== 2) {\n      throw new Error(`\"${instruction.name}\" expects an array with 2 numeric elements`);\n    }\n  }\n};\n\nexport const $exists: FieldInstruction<boolean> = {\n  type: 'field',\n  validate: ensureIs('boolean'),\n};\n\nexport const $gte: FieldInstruction<Comparable> = {\n  type: 'field',\n  validate: ensureIsComparable\n};\nexport const $gt = $gte;\nexport const $lt = $gt;\nexport const $lte = $gt;\n\nexport const $eq: FieldInstruction = {\n  type: 'field',\n};\nexport const $ne = $eq;\n\nexport interface RegExpFieldContext extends FieldParsingContext {\n  query: {\n    $options?: string\n  }\n}\n\nexport const $regex: FieldInstruction<string | RegExp, RegExpFieldContext> = {\n  type: 'field',\n  validate(instruction, value) {\n    if (!(value instanceof RegExp) && typeof value !== 'string') {\n      throw new Error(`\"${instruction.name}\" expects value to be a regular expression or a string that represents regular expression`);\n    }\n  },\n  parse(instruction, rawValue, context) {\n    const value = typeof rawValue === 'string'\n      ? new RegExp(rawValue, context.query.$options || '')\n      : rawValue;\n    return new FieldCondition(instruction.name, context.field, value);\n  }\n};\nexport const $options: FieldInstruction = {\n  type: 'field',\n  parse: () => NULL_CONDITION,\n};\n\nexport const $where: DocumentInstruction<() => boolean> = {\n  type: 'document',\n  validate: ensureIs('function'),\n};\n","import {\n  Condition,\n  buildAnd as and,\n  ParsingInstruction,\n  ObjectQueryParser,\n  FieldQueryOperators,\n} from '@ucast/core';\nimport { MongoQuery } from './types';\n\nexport interface ParseOptions {\n  field: string\n}\n\nexport class MongoQueryParser extends ObjectQueryParser<MongoQuery<any>> {\n  constructor(instructions: Record<string, ParsingInstruction>) {\n    super(instructions, {\n      defaultOperatorName: '$eq',\n      operatorToConditionName: name => name.slice(1),\n    });\n  }\n\n  parse<Q extends MongoQuery<any>, FQ extends FieldQueryOperators<Q> = FieldQueryOperators<Q>>(\n    query: Q | FQ,\n    options?: ParseOptions\n  ): Condition {\n    if (options && options.field) {\n      return and(this.parseFieldOperators(options.field, query as FQ));\n    }\n\n    return super.parse(query);\n  }\n}\n","import * as instructions from './instructions';\n\nexport const allParsingInstructions = instructions;\nexport * from './instructions';\nexport * from './MongoQueryParser';\nexport * from './types';\nexport { defaultInstructionParsers as defaultParsers } from '@ucast/core';\n","import { FieldCondition } from '@ucast/core';\nimport { JsInterpretationOptions, JsInterpreter } from './types';\n\nexport type AnyObject = Record<PropertyKey, unknown>;\nexport type GetField = (object: any, field: string) => any;\n\nexport function includes<T>(\n  items: T[],\n  value: T,\n  compare: JsInterpretationOptions['compare']\n): boolean {\n  for (let i = 0, length = items.length; i < length; i++) {\n    if (compare(items[i], value) === 0) {\n      return true;\n    }\n  }\n\n  return false;\n}\n\nexport function isArrayAndNotNumericField<T>(object: T | T[], field: string): object is T[] {\n  return Array.isArray(object) && Number.isNaN(Number(field));\n}\n\nfunction getField<T extends AnyObject>(object: T | T[], field: string, get: GetField) {\n  if (!isArrayAndNotNumericField(object, field)) {\n    return get(object, field);\n  }\n\n  let result: unknown[] = [];\n\n  for (let i = 0; i < object.length; i++) {\n    const value = get(object[i], field);\n    if (typeof value !== 'undefined') {\n      result = result.concat(value);\n    }\n  }\n\n  return result;\n}\n\nexport function getValueByPath(object: AnyObject, field: string, get: GetField) {\n  if (field.indexOf('.') === -1) {\n    return getField(object, field, get);\n  }\n\n  const paths = field.split('.');\n  let value = object;\n\n  for (let i = 0, length = paths.length; i < length; i++) {\n    value = getField(value, paths[i], get);\n\n    if (!value || typeof value !== 'object') {\n      return value;\n    }\n  }\n\n  return value;\n}\n\nexport function testValueOrArray<T, U = T>(test: JsInterpreter<FieldCondition<T>, U>) {\n  return ((node, object, context) => {\n    const value = context.get(object, node.field);\n\n    if (!Array.isArray(value)) {\n      return test(node, value, context);\n    }\n\n    return value.some(v => test(node, v, context));\n  }) as JsInterpreter<FieldCondition<T>, AnyObject | U>;\n}\n","import { createInterpreter, ITSELF } from '@ucast/core';\nimport { getValueByPath, AnyObject, GetField } from './utils';\nimport { JsInterpretationOptions, JsInterpreter } from './types';\n\nconst defaultGet = (object: AnyObject, field: string) => object[field];\ntype Field = string | typeof ITSELF;\n\nexport function getObjectFieldCursor<T extends {}>(object: T, path: string, get: GetField) {\n  const dotIndex = path.lastIndexOf('.');\n\n  if (dotIndex === -1) {\n    return [object, path] as const;\n  }\n\n  return [\n    get(object, path.slice(0, dotIndex)) as T,\n    path.slice(dotIndex + 1)\n  ] as const;\n}\n\nexport function getObjectField(object: unknown, field: Field, get: GetField = defaultGet) {\n  if (field === ITSELF) {\n    return object;\n  }\n\n  if (!object) {\n    throw new Error(`Unable to get field \"${field}\" out of ${String(object)}.`);\n  }\n\n  return getValueByPath(object as Record<string, unknown>, field, get);\n}\n\nexport function createGetter<T extends GetField>(get: T) {\n  return (object: Parameters<T>[0], field: Parameters<T>[1]) => getObjectField(object, field, get);\n}\n\nexport function compare<T>(a: T, b: T): 0 | 1 | -1 {\n  if (a === b) {\n    return 0;\n  }\n\n  return a > b ? 1 : -1;\n}\n\nexport function createJsInterpreter<\n  T extends JsInterpreter<any>,\n  O extends Partial<JsInterpretationOptions>\n>(\n  operators: Record<string, T>,\n  options: O = {} as O\n) {\n  return createInterpreter(operators, {\n    get: getObjectField,\n    compare,\n    ...options,\n  });\n}\n","import {\n  CompoundCondition as Compound,\n  FieldCondition as Field,\n  DocumentCondition as Document,\n  Condition,\n  Comparable,\n  ITSELF,\n} from '@ucast/core';\nimport { JsInterpreter as Interpret } from './types';\nimport {\n  includes,\n  testValueOrArray,\n  isArrayAndNotNumericField,\n  AnyObject,\n} from './utils';\nimport { getObjectFieldCursor } from './interpreter';\n\nexport const or: Interpret<Compound> = (node, object, { interpret }) => {\n  return node.value.some(condition => interpret(condition, object));\n};\n\nexport const nor: typeof or = (node, object, context) => {\n  return !or(node, object, context);\n};\n\nexport const and: Interpret<Compound> = (node, object, { interpret }) => {\n  return node.value.every(condition => interpret(condition, object));\n};\n\nexport const not: Interpret<Compound> = (node, object, { interpret }) => {\n  return !interpret(node.value[0], object);\n};\n\nexport const eq: Interpret<Field> = (node, object, { compare, get }) => {\n  const value = get(object, node.field);\n\n  if (Array.isArray(value) && !Array.isArray(node.value)) {\n    return includes(value, node.value, compare);\n  }\n\n  return compare(value, node.value) === 0;\n};\n\nexport const ne: typeof eq = (node, object, context) => {\n  return !eq(node, object, context);\n};\n\nexport const lte = testValueOrArray<Comparable>((node, value, context) => {\n  const result = context.compare(value, node.value);\n  return result === 0 || result === -1;\n});\n\nexport const lt = testValueOrArray<Comparable>((node, value, context) => {\n  return context.compare(value, node.value) === -1;\n});\nexport const gt = testValueOrArray<Comparable>((node, value, context) => {\n  return context.compare(value, node.value) === 1;\n});\nexport const gte = testValueOrArray<Comparable>((node, value, context) => {\n  const result = context.compare(value, node.value);\n  return result === 0 || result === 1;\n});\n\nexport const exists: Interpret<Field<boolean>> = (node, object, { get }) => {\n  if (node.field === ITSELF) {\n    return typeof object !== 'undefined';\n  }\n\n  const [item, field] = getObjectFieldCursor<{}>(object, node.field, get);\n  const test = (value: {}) => {\n    if (value == null) return Boolean(value) === node.value;\n    return value.hasOwnProperty(field) === node.value;\n  };\n\n  return isArrayAndNotNumericField(item, field) ? item.some(test) : test(item);\n};\n\nexport const mod = testValueOrArray<[number, number], number>((node, value) => {\n  return typeof value === 'number' && value % node.value[0] === node.value[1];\n});\n\nexport const size: Interpret<Field<number>, AnyObject | unknown[]> = (node, object, { get }) => {\n  const [items, field] = getObjectFieldCursor(object as AnyObject, node.field, get);\n  const test = (item: unknown) => {\n    const value = get(item, field);\n    return Array.isArray(value) && value.length === node.value;\n  };\n\n  return node.field !== ITSELF && isArrayAndNotNumericField(items, field)\n    ? items.some(test)\n    : test(items);\n};\n\nexport const regex = testValueOrArray<RegExp, string>((node, value) => {\n  return typeof value === 'string' && node.value.test(value);\n});\n\nexport const within = testValueOrArray<unknown[], unknown>((node, object, { compare }) => {\n  return includes(node.value, object, compare);\n});\n\nexport const nin: typeof within = (node, object, context) => !within(node, object, context);\n\nexport const all: Interpret<Field<unknown[]>> = (node, object, { compare, get }) => {\n  const value = get(object, node.field);\n  return Array.isArray(value) && node.value.every(v => includes(value, v, compare));\n};\n\nexport const elemMatch: Interpret<Field<Condition>> = (node, object, { interpret, get }) => {\n  const value = get(object, node.field);\n  return Array.isArray(value) && value.some(v => interpret(node.value, v));\n};\n\ntype WhereFunction = (this: AnyObject) => boolean;\nexport const where: Interpret<Document<WhereFunction>, AnyObject> = (node, object) => {\n  return node.value.call(object);\n};\n","import { createJsInterpreter } from './interpreter';\nimport * as interpreters from './interpreters';\n\nexport const allInterpreters = {\n  ...interpreters,\n  in: interpreters.within,\n};\nexport const interpret = createJsInterpreter(allInterpreters);\n","import { createTranslatorFactory, ParsingInstruction, Condition, ITSELF } from '@ucast/core';\nimport {\n  MongoQuery,\n  MongoQueryParser,\n  MongoQueryFieldOperators,\n  allParsingInstructions,\n  defaultParsers\n} from '@ucast/mongo';\nimport {\n  createJsInterpreter,\n  allInterpreters,\n  JsInterpreter,\n  JsInterpretationOptions,\n  compare\n} from '@ucast/js';\n\ntype ThingFilter<T> = {\n  (object: T): boolean\n  ast: Condition\n};\n\ninterface HasToJSON {\n  toJSON(): unknown\n}\n\nfunction toPrimitive(value: unknown) {\n  if (value instanceof Date) {\n    return value.getTime();\n  }\n\n  if (value && typeof (value as HasToJSON).toJSON === 'function') {\n    return (value as HasToJSON).toJSON();\n  }\n\n  return value;\n}\n\nconst comparePrimitives: typeof compare = (a, b) => compare(toPrimitive(a), toPrimitive(b));\n\nexport interface FactoryOptions extends JsInterpretationOptions {\n  forPrimitives: boolean\n}\n\nexport type Filter = <\n  T = Record<string, unknown>,\n  Q extends MongoQuery<T> = MongoQuery<T>\n>(query: Q) => ThingFilter<T>;\n\nexport type PrimitiveMongoQuery<T> = MongoQueryFieldOperators<T> & Partial<{\n  $and: MongoQueryFieldOperators<T>[],\n  $or: MongoQueryFieldOperators<T>[],\n  $nor: MongoQueryFieldOperators<T>[]\n}>;\nexport type PrimitiveFilter = <\n  T,\n  Q extends PrimitiveMongoQuery<T> = PrimitiveMongoQuery<T>\n>(query: Q) => ThingFilter<T>;\n\ntype FilterType<T extends { forPrimitives?: true }> = T['forPrimitives'] extends true\n  ? PrimitiveFilter\n  : Filter;\n\nexport function createFactory<\n  T extends Record<string, ParsingInstruction<any, any>>,\n  I extends Record<string, JsInterpreter<any>>,\n  P extends { forPrimitives?: true }\n>(instructions: T, interpreters: I, options?: Partial<FactoryOptions> & P): FilterType<P> {\n  const parser = new MongoQueryParser(instructions);\n  const interpret = createJsInterpreter(interpreters, {\n    compare: comparePrimitives,\n    ...options\n  });\n\n  if (options && options.forPrimitives) {\n    const params = { field: ITSELF };\n    const parse = parser.parse;\n    parser.setParse(query => parse(query, params));\n  }\n\n  return createTranslatorFactory(parser.parse, interpret) as any;\n}\n\nexport const guard = createFactory(allParsingInstructions, allInterpreters);\n\nconst compoundOperators = ['$and', '$or'] as const;\nconst allPrimitiveParsingInstructions = compoundOperators.reduce((instructions, name) => {\n  instructions[name] = { ...instructions[name], type: 'field' } as any;\n  return instructions;\n}, {\n  ...allParsingInstructions,\n  $nor: {\n    ...allParsingInstructions.$nor,\n    type: 'field',\n    parse: defaultParsers.compound\n  }\n});\n\nexport const squire = createFactory(allPrimitiveParsingInstructions, allInterpreters, {\n  forPrimitives: true\n});\nexport const filter = guard; // TODO: remove in next major version\n","import { Condition } from './Condition';\nimport { Parse } from './types';\nimport { AnyInterpreter } from './interpreter';\n\ntype Bound<T> = T extends (first: Condition, ...args: infer A) => any\n  ? { (...args: A): ReturnType<T>, ast: Condition }\n  : never;\n\nexport function createTranslatorFactory<Lang, Interpreter extends AnyInterpreter>(\n  parse: Parse<Lang>,\n  interpret: Interpreter\n) {\n  return (query: Lang, ...args: unknown[]): Bound<Interpreter> => {\n    const ast = parse(query, ...args);\n    const translate = (interpret as any).bind(null, ast);\n    translate.ast = ast;\n    return translate;\n  };\n}\n","import { AnyObject, Subject, SubjectType, SubjectClass, ForcedSubject, AliasesMap } from './types';\n\nexport function wrapArray<T>(value: T[] | T): T[] {\n  return Array.isArray(value) ? value : [value];\n}\n\nexport function setByPath(object: AnyObject, path: string, value: unknown): void {\n  let ref = object;\n  let lastKey = path;\n\n  if (path.indexOf('.') !== -1) {\n    const keys = path.split('.');\n\n    lastKey = keys.pop()!;\n    ref = keys.reduce((res, prop) => {\n      res[prop] = res[prop] || {};\n      return res[prop] as AnyObject;\n    }, object);\n  }\n\n  ref[lastKey] = value;\n}\n\nconst TYPE_FIELD = '__caslSubjectType__';\nexport function setSubjectType<\n  T extends string,\n  U extends Record<PropertyKey, any>\n>(type: T, object: U): U & ForcedSubject<T> {\n  if (object) {\n    if (!Object.hasOwn(object, TYPE_FIELD)) {\n      Object.defineProperty(object, TYPE_FIELD, { value: type });\n    } else if (type !== object[TYPE_FIELD]) {\n      throw new Error(`Trying to cast object to subject type ${type} but previously it was casted to ${object[TYPE_FIELD]}`);\n    }\n  }\n\n  return object as U & ForcedSubject<T>;\n}\n\nexport const isSubjectType = (value: unknown): value is SubjectType => {\n  const type = typeof value;\n  return type === 'string' || type === 'function';\n};\n\nconst getSubjectClassName = (value: SubjectClass) => value.modelName || value.name;\nexport function getSubjectTypeName(value: SubjectType) {\n  return typeof value === 'string' ? value : getSubjectClassName(value);\n}\n\nexport function detectSubjectType(object: Exclude<Subject, SubjectType>): string {\n  if (Object.hasOwn(object, TYPE_FIELD)) {\n    return object[TYPE_FIELD];\n  }\n\n  return getSubjectClassName(object.constructor as SubjectClass);\n}\n\nexport const DETECT_SUBJECT_TYPE_STRATEGY = {\n  function: (object: Exclude<Subject, SubjectType>) => object.constructor as SubjectClass,\n  string: detectSubjectType\n};\n\ntype AliasMerge = (actions: string[], action: string | string[]) => string[];\nfunction expandActions(aliasMap: AliasesMap, rawActions: string | string[], merge: AliasMerge) {\n  let actions = wrapArray(rawActions);\n  let i = 0;\n\n  while (i < actions.length) {\n    const action = actions[i++];\n\n    if (Object.hasOwn(aliasMap, action)) {\n      actions = merge(actions, aliasMap[action]);\n    }\n  }\n\n  return actions;\n}\n\nfunction findDuplicate(actions: string[], actionToFind: string | string[]) {\n  if (typeof actionToFind === 'string' && actions.indexOf(actionToFind) !== -1) {\n    return actionToFind;\n  }\n\n  for (let i = 0; i < actionToFind.length; i++) {\n    if (actions.indexOf(actionToFind[i]) !== -1) return actionToFind[i];\n  }\n\n  return null;\n}\n\nconst defaultAliasMerge: AliasMerge = (actions, action) => actions.concat(action);\nfunction validateForCycles(aliasMap: AliasesMap, reservedAction: string) {\n  if (reservedAction in aliasMap) {\n    throw new Error(`Cannot use \"${reservedAction}\" as an alias because it's reserved action.`);\n  }\n\n  const keys = Object.keys(aliasMap);\n  const mergeAliasesAndDetectCycles: AliasMerge = (actions, action) => {\n    const duplicate = findDuplicate(actions, action);\n    if (duplicate) throw new Error(`Detected cycle ${duplicate} -> ${actions.join(', ')}`);\n\n    const isUsingReservedAction = typeof action === 'string' && action === reservedAction\n      || actions.indexOf(reservedAction) !== -1\n      || Array.isArray(action) && action.indexOf(reservedAction) !== -1;\n    if (isUsingReservedAction) throw new Error(`Cannot make an alias to \"${reservedAction}\" because this is reserved action`);\n\n    return actions.concat(action);\n  };\n\n  for (let i = 0; i < keys.length; i++) {\n    expandActions(aliasMap, keys[i], mergeAliasesAndDetectCycles);\n  }\n}\n\nexport type AliasResolverOptions = { skipValidate?: boolean; anyAction?: string };\nexport function createAliasResolver(aliasMap: AliasesMap, options?: AliasResolverOptions) {\n  if (!options || options.skipValidate !== false) {\n    validateForCycles(aliasMap, options && options.anyAction || 'manage');\n  }\n\n  return (action: string | string[]) => expandActions(aliasMap, action, defaultAliasMerge);\n}\n\nfunction copyArrayTo<T>(dest: T[], target: T[], start: number) {\n  for (let i = start; i < target.length; i++) {\n    dest.push(target[i]);\n  }\n}\n\nexport function mergePrioritized<T extends { priority: number }>(\n  array?: T[],\n  anotherArray?: T[]\n): T[] {\n  if (!array || !array.length) {\n    return anotherArray || [];\n  }\n\n  if (!anotherArray || !anotherArray.length) {\n    return array || [];\n  }\n\n  let i = 0;\n  let j = 0;\n  const merged: T[] = [];\n\n  while (i < array.length && j < anotherArray.length) {\n    if (array[i].priority < anotherArray[j].priority) {\n      merged.push(array[i]);\n      i++;\n    } else {\n      merged.push(anotherArray[j]);\n      j++;\n    }\n  }\n\n  copyArrayTo(merged, array, i);\n  copyArrayTo(merged, anotherArray, j);\n\n  return merged;\n}\n\nexport function getOrDefault<K, V>(map: Map<K, V>, key: K, defaultValue: () => V) {\n  let value = map.get(key);\n\n  if (!value) {\n    value = defaultValue();\n    map.set(key, value);\n  }\n\n  return value;\n}\n\nexport const identity = <T>(x: T) => x;\n","import { wrapArray, isSubjectType } from './utils';\nimport {\n  MatchConditions,\n  MatchField,\n  Abilities,\n  ToAbilityTypes,\n  Normalize,\n  ConditionsMatcher,\n  FieldMatcher,\n} from './types';\nimport { RawRule, RawRuleFrom } from './RawRule';\n\ntype Tuple<A extends Abilities> = Normalize<ToAbilityTypes<A>>;\n\nfunction validate(rule: RawRuleFrom<Abilities, any>, options: RuleOptions<any>) {\n  if (Array.isArray(rule.fields) && !rule.fields.length) {\n    throw new Error('`rawRule.fields` cannot be an empty array. https://bit.ly/390miLa');\n  }\n\n  if (rule.fields && !options.fieldMatcher) {\n    throw new Error('You need to pass \"fieldMatcher\" option in order to restrict access by fields');\n  }\n\n  if (rule.conditions && !options.conditionsMatcher) {\n    throw new Error('You need to pass \"conditionsMatcher\" option in order to restrict access by conditions');\n  }\n}\n\nexport interface RuleOptions<Conditions> {\n  conditionsMatcher?: ConditionsMatcher<Conditions>\n  fieldMatcher?: FieldMatcher\n  resolveAction(action: string | string[]): string | string[]\n}\n\nexport class Rule<A extends Abilities, C> {\n  private _matchConditions: MatchConditions | undefined;\n  private _matchField: MatchField<string> | undefined;\n  private readonly _options!: RuleOptions<C>;\n  public readonly action!: Tuple<A>[0] | Tuple<A>[0][];\n  public readonly subject!: Tuple<A>[1] | Tuple<A>[1][];\n  public readonly inverted!: boolean;\n  public readonly conditions!: C | undefined;\n  public readonly fields!: string[] | undefined;\n  public readonly reason!: string | undefined;\n  public readonly origin!: RawRule<ToAbilityTypes<A>, C>;\n  public readonly priority!: number;\n\n  constructor(\n    rule: RawRule<ToAbilityTypes<A>, C>,\n    options: RuleOptions<C>,\n    priority: number = 0\n  ) {\n    validate(rule, options);\n\n    this.action = options.resolveAction(rule.action);\n    this.subject = rule.subject!;\n    this.inverted = !!rule.inverted;\n    this.conditions = rule.conditions;\n    this.reason = rule.reason;\n    this.origin = rule;\n    this.fields = rule.fields ? wrapArray(rule.fields) : undefined;\n    this.priority = priority;\n    this._options = options;\n  }\n\n  private _conditionsMatcher() {\n    if (this.conditions && !this._matchConditions) {\n      this._matchConditions = this._options.conditionsMatcher!(this.conditions);\n    }\n\n    return this._matchConditions!;\n  }\n\n  get ast() {\n    const matches = this._conditionsMatcher();\n    return matches ? matches.ast : undefined;\n  }\n\n  matchesConditions(object: Normalize<A>[1] | undefined): boolean {\n    if (!this.conditions) {\n      return true;\n    }\n\n    if (!object || isSubjectType(object)) {\n      return !this.inverted;\n    }\n\n    const matches = this._conditionsMatcher();\n    return matches(object as Record<string, unknown>);\n  }\n\n  matchesField(field: string | undefined): boolean {\n    if (!this.fields) {\n      return true;\n    }\n\n    if (!field) {\n      return !this.inverted;\n    }\n\n    if (this.fields && !this._matchField) {\n      this._matchField = this._options.fieldMatcher!(this.fields);\n    }\n\n    return this._matchField!(field);\n  }\n}\n","export interface LinkedItem<T> {\n  next: LinkedItem<T> | null\n  prev: LinkedItem<T> | null\n  readonly value: T\n}\n\nexport function linkedItem<T>(value: T, prev: LinkedItem<T>['prev']) {\n  const item = { value, prev, next: null };\n\n  if (prev) {\n    prev.next = item;\n  }\n\n  return item;\n}\n\nexport function unlinkItem(item: LinkedItem<any>) {\n  if (item.next) {\n    item.next.prev = item.prev;\n  }\n\n  if (item.prev) {\n    item.prev.next = item.next;\n  }\n\n  item.next = item.prev = null; // eslint-disable-line\n}\n\nexport const cloneLinkedItem = <T extends LinkedItem<any>>(item: T): T => ({\n  value: item.value,\n  prev: item.prev,\n  next: item.next,\n} as T);\n","import { Rule, RuleOptions } from './Rule';\nimport { RawRuleFrom } from './RawRule';\nimport {\n  Abilities,\n  Normalize,\n  SubjectType,\n  AbilityParameters,\n  AbilityTuple,\n  ExtractSubjectType\n} from './types';\nimport { wrapArray, detectSubjectType, mergePrioritized, getOrDefault, identity, isSubjectType, DETECT_SUBJECT_TYPE_STRATEGY } from './utils';\nimport { LinkedItem, linkedItem, unlinkItem, cloneLinkedItem } from './structures/LinkedItem';\n\nexport interface RuleIndexOptions<A extends Abilities, C> extends Partial<RuleOptions<C>> {\n  detectSubjectType?(\n    subject: Exclude<Normalize<A>[1], SubjectType>\n  ): ExtractSubjectType<Normalize<A>[1]>;\n  anyAction?: string;\n  anySubjectType?: string;\n}\n\nexport declare const ɵabilities: unique symbol;\nexport declare const ɵconditions: unique symbol;\ninterface WithGenerics {\n  [ɵabilities]: any\n  [ɵconditions]: any\n}\nexport type Public<T extends WithGenerics> = { [K in keyof T]: T[K] };\nexport interface Generics<T extends WithGenerics> {\n  abilities: T[typeof ɵabilities],\n  conditions: T[typeof ɵconditions]\n}\n\nexport type RuleOf<T extends WithGenerics> =\n  Rule<Generics<T>['abilities'], Generics<T>['conditions']>;\nexport type RawRuleOf<T extends WithGenerics> =\n  RawRuleFrom<Generics<T>['abilities'], Generics<T>['conditions']>;\n\nexport type RuleIndexOptionsOf<T extends WithGenerics> =\n  RuleIndexOptions<Generics<T>['abilities'], Generics<T>['conditions']>;\n\ninterface AbilityEvent<T extends WithGenerics> {\n  target: T\n  /** @deprecated use \"target\" property instead */\n  ability: T\n}\n\nexport interface UpdateEvent<T extends WithGenerics> extends AbilityEvent<T> {\n  rules: RawRuleOf<T>[]\n}\n/**\n * @deprecated `on`/`emit` properly infer type without this type\n * TODO(major): delete\n */\nexport type EventHandler<Event> = (event: Event) => void;\n\nexport type Events<\n  T extends WithGenerics,\n  K extends keyof EventsMap<T> = keyof EventsMap<T>\n> = Map<K, LinkedItem<EventsMap<T>[K]> | null>;\n\ninterface EventsMap<T extends WithGenerics> {\n  update(event: UpdateEvent<T>): void\n  updated(event: UpdateEvent<T>): void\n}\n\ntype IndexTree<A extends Abilities, C> = Map<SubjectType, Map<string, {\n  rules: Rule<A, C>[],\n  merged: boolean\n}>>;\n\nexport type Unsubscribe = () => void;\n\nconst defaultActionEntry = () => ({\n  rules: [] as unknown as Rule<any, any>[],\n  merged: false\n});\nconst defaultSubjectEntry = () => new Map<string, ReturnType<typeof defaultActionEntry>>();\n\ntype AbilitySubjectTypeParameters<T extends Abilities, IncludeField extends boolean = true> =\n  AbilityParameters<\n  T,\n  T extends AbilityTuple\n    ? IncludeField extends true\n      ? (action: T[0], subject: ExtractSubjectType<T[1]>, field?: string) => 0\n      : (action: T[0], subject: ExtractSubjectType<T[1]>) => 0\n    : never,\n  (action: Extract<T, string>) => 0\n  >;\n\nexport class RuleIndex<A extends Abilities, Conditions> {\n  private _hasPerFieldRules: boolean = false;\n  private _events?: Events<this>;\n  private _indexedRules: IndexTree<A, Conditions> = new Map();\n  private _rules: RawRuleFrom<A, Conditions>[];\n  private readonly _ruleOptions: RuleOptions<Conditions>;\n  private _detectSubjectType: this['detectSubjectType'];\n  private readonly _anyAction: string;\n  private readonly _anySubjectType: string;\n  private readonly _hasCustomSubjectTypeDetection: boolean;\n  readonly [ɵabilities]!: A;\n  readonly [ɵconditions]!: Conditions;\n\n  constructor(\n    rules: RawRuleFrom<A, Conditions>[] = [],\n    options: RuleIndexOptions<A, Conditions> = {}\n  ) {\n    this._ruleOptions = {\n      conditionsMatcher: options.conditionsMatcher,\n      fieldMatcher: options.fieldMatcher,\n      resolveAction: options.resolveAction || identity,\n    };\n    this._anyAction = options.anyAction || 'manage';\n    this._anySubjectType = options.anySubjectType || 'all';\n    this._rules = rules;\n    this._hasCustomSubjectTypeDetection = !!options.detectSubjectType;\n    this._detectSubjectType = options.detectSubjectType || (detectSubjectType as this['detectSubjectType']);\n    this._indexAndAnalyzeRules(rules);\n  }\n\n  get rules() {\n    return this._rules;\n  }\n\n  detectSubjectType(object?: Normalize<A>[1]): ExtractSubjectType<Normalize<A>[1]> {\n    if (isSubjectType(object)) return object as ExtractSubjectType<Normalize<A>[1]>;\n    if (!object) return this._anySubjectType as ExtractSubjectType<Normalize<A>[1]>;\n    return this._detectSubjectType(object as Exclude<Normalize<A>[1], SubjectType>);\n  }\n\n  update(rules: RawRuleFrom<A, Conditions>[]): Public<this> {\n    const event = {\n      rules,\n      ability: this,\n      target: this\n    } as unknown as UpdateEvent<this>;\n\n    this._emit('update', event);\n    this._rules = rules;\n    this._indexAndAnalyzeRules(rules);\n    this._emit('updated', event);\n\n    return this;\n  }\n\n  private _indexAndAnalyzeRules(rawRules: RawRuleFrom<A, Conditions>[]) {\n    const indexedRules: IndexTree<A, Conditions> = new Map();\n    let typeOfSubjectType: string | undefined;\n\n    for (let i = rawRules.length - 1; i >= 0; i--) {\n      const priority = rawRules.length - i - 1;\n      const rule = new Rule(rawRules[i], this._ruleOptions, priority);\n      const actions = wrapArray(rule.action);\n      const subjects = wrapArray(rule.subject || this._anySubjectType);\n      if (!this._hasPerFieldRules && rule.fields) this._hasPerFieldRules = true;\n\n      for (let k = 0; k < subjects.length; k++) {\n        const subjectRules = getOrDefault(indexedRules, subjects[k], defaultSubjectEntry);\n        if (typeOfSubjectType === undefined) {\n          typeOfSubjectType = typeof subjects[k];\n        }\n        if (typeof subjects[k] !== typeOfSubjectType && typeOfSubjectType !== 'mixed') {\n          typeOfSubjectType = 'mixed';\n        }\n\n        for (let j = 0; j < actions.length; j++) {\n          getOrDefault(subjectRules, actions[j], defaultActionEntry).rules.push(rule);\n        }\n      }\n    }\n\n    this._indexedRules = indexedRules;\n    if (typeOfSubjectType !== 'mixed' && !this._hasCustomSubjectTypeDetection) {\n      const detectSubjectType = DETECT_SUBJECT_TYPE_STRATEGY[typeOfSubjectType as 'function' | 'string'] || DETECT_SUBJECT_TYPE_STRATEGY.string;\n      this._detectSubjectType = detectSubjectType as this['detectSubjectType'];\n    }\n  }\n\n  possibleRulesFor(...args: AbilitySubjectTypeParameters<A, false>): Rule<A, Conditions>[];\n  possibleRulesFor(\n    action: string,\n    subjectType: SubjectType = this._anySubjectType\n  ): Rule<A, Conditions>[] {\n    if (!isSubjectType(subjectType)) {\n      throw new Error('\"possibleRulesFor\" accepts only subject types (i.e., string or class) as the 2nd parameter');\n    }\n\n    const subjectRules = getOrDefault(this._indexedRules, subjectType, defaultSubjectEntry);\n    const actionRules = getOrDefault(subjectRules, action, defaultActionEntry);\n\n    if (actionRules.merged) {\n      return actionRules.rules;\n    }\n\n    const anyActionRules = action !== this._anyAction && subjectRules.has(this._anyAction)\n      ? subjectRules.get(this._anyAction)!.rules\n      : undefined;\n    let rules = mergePrioritized(actionRules.rules, anyActionRules);\n\n    if (subjectType !== this._anySubjectType) {\n      rules = mergePrioritized(rules, (this as any).possibleRulesFor(action, this._anySubjectType));\n    }\n\n    actionRules.rules = rules;\n    actionRules.merged = true;\n\n    return rules;\n  }\n\n  rulesFor(...args: AbilitySubjectTypeParameters<A>): Rule<A, Conditions>[];\n  rulesFor(action: string, subjectType?: SubjectType, field?: string): Rule<A, Conditions>[] {\n    const rules: Rule<A, Conditions>[] = (this as any).possibleRulesFor(action, subjectType);\n\n    if (field && typeof field !== 'string') {\n      throw new Error('The 3rd, `field` parameter is expected to be a string. See https://stalniy.github.io/casl/en/api/casl-ability#can-of-pure-ability for details');\n    }\n\n    if (!this._hasPerFieldRules) {\n      return rules;\n    }\n\n    return rules.filter(rule => rule.matchesField(field));\n  }\n\n  actionsFor(subjectType: ExtractSubjectType<Normalize<A>[1]>): string[] {\n    if (!isSubjectType(subjectType)) {\n      throw new Error('\"actionsFor\" accepts only subject types (i.e., string or class) as a parameter');\n    }\n\n    const actions = new Set<string>();\n\n    const subjectRules = this._indexedRules.get(subjectType);\n    if (subjectRules) {\n      Array.from(subjectRules.keys()).forEach(action => actions.add(action));\n    }\n\n    const anySubjectTypeRules = subjectType !== this._anySubjectType\n      ? this._indexedRules.get(this._anySubjectType)\n      : undefined;\n    if (anySubjectTypeRules) {\n      Array.from(anySubjectTypeRules.keys()).forEach(action => actions.add(action));\n    }\n\n    return Array.from(actions);\n  }\n\n  on<T extends keyof EventsMap<this>>(\n    event: T,\n    handler: EventsMap<Public<this>>[T]\n  ): Unsubscribe {\n    this._events = this._events || new Map();\n    const events = this._events;\n    const tail = events.get(event) || null;\n    const item = linkedItem(handler, tail);\n    events.set(event, item);\n\n    return () => {\n      const currentTail = events.get(event);\n\n      if (!item.next && !item.prev && currentTail === item) {\n        events.delete(event);\n      } else if (item === currentTail) {\n        events.set(event, item.prev);\n      }\n\n      unlinkItem(item);\n    };\n  }\n\n  private _emit<T extends keyof EventsMap<this>>(\n    name: T,\n    payload: Parameters<EventsMap<this>[T]>[0]\n  ) {\n    if (!this._events) return;\n\n    let current = this._events.get(name) || null;\n    while (current !== null) {\n      const prev = current.prev ? cloneLinkedItem(current.prev) : null;\n      current.value(payload);\n      current = prev;\n    }\n  }\n}\n","import { RuleIndex, RuleIndexOptions, RuleIndexOptionsOf, Public, RawRuleOf } from './RuleIndex';\nimport { Abilities, AbilityTuple, CanParameters, Subject } from './types';\nimport { Rule } from './Rule';\n\nexport interface AbilityOptions<A extends Abilities, Conditions>\n  extends RuleIndexOptions<A, Conditions> {}\nexport interface AnyAbility extends Public<PureAbility<any, any>> {}\nexport interface AbilityOptionsOf<T extends AnyAbility> extends RuleIndexOptionsOf<T> {}\n\nexport type AbilityClass<T extends AnyAbility> = new (\n  rules?: RawRuleOf<T>[],\n  options?: AbilityOptionsOf<T>\n) => T;\n\nexport type CreateAbility<T extends AnyAbility> = (\n  rules?: RawRuleOf<T>[],\n  options?: AbilityOptionsOf<T>\n) => T;\n\nexport class PureAbility<\n  A extends Abilities = AbilityTuple,\n  Conditions = unknown\n> extends RuleIndex<A, Conditions> {\n  can(...args: CanParameters<A>): boolean;\n  can(action: string, subject?: Subject, field?: string): boolean {\n    const rule = (this as PrimitiveAbility).relevantRuleFor(action, subject, field);\n    return !!rule && !rule.inverted;\n  }\n\n  relevantRuleFor(...args: CanParameters<A>): Rule<A, Conditions> | null;\n  relevantRuleFor(action: string, subject?: Subject, field?: string): Rule<A, Conditions> | null {\n    const subjectType = this.detectSubjectType(subject);\n    const rules = (this as any).rulesFor(action, subjectType, field);\n\n    for (let i = 0, length = rules.length; i < length; i++) {\n      if (rules[i].matchesConditions(subject)) {\n        return rules[i];\n      }\n    }\n\n    return null;\n  }\n\n  cannot(...args: CanParameters<A>): boolean;\n  cannot(action: string, subject?: Subject, field?: string): boolean {\n    return !(this as PrimitiveAbility).can(action, subject, field);\n  }\n}\n\n/**\n * helper interface that helps to emit js methods that have static parameters\n */\ninterface PrimitiveAbility<A extends Abilities = AbilityTuple, Conditions = unknown> {\n  can(action: string, subject?: Subject, field?: string): boolean;\n  relevantRuleFor(action: string, subject?: Subject, field?: string): Rule<A, Conditions> | null\n}\n","import {\n  $eq,\n  eq,\n  $ne,\n  ne,\n  $lt,\n  lt,\n  $lte,\n  lte,\n  $gt,\n  gt,\n  $gte,\n  gte,\n  $in,\n  within,\n  $nin,\n  nin,\n  $all,\n  all,\n  $size,\n  size,\n  $regex,\n  $options,\n  regex,\n  $elemMatch,\n  elemMatch,\n  $exists,\n  exists,\n  and,\n  createFactory,\n  BuildMongoQuery,\n  DefaultOperators,\n} from '@ucast/mongo2js';\nimport { ConditionsMatcher, AnyObject } from '../types';\nimport { Container, GenericFactory } from '../hkt';\n\nconst defaultInstructions = {\n  $eq,\n  $ne,\n  $lt,\n  $lte,\n  $gt,\n  $gte,\n  $in,\n  $nin,\n  $all,\n  $size,\n  $regex,\n  $options,\n  $elemMatch,\n  $exists,\n};\nconst defaultInterpreters = {\n  eq,\n  ne,\n  lt,\n  lte,\n  gt,\n  gte,\n  in: within,\n  nin,\n  all,\n  size,\n  regex,\n  elemMatch,\n  exists,\n  and,\n};\n\ninterface MongoQueryFactory extends GenericFactory {\n  produce: MongoQuery<this[0]>\n}\n\ntype MergeUnion<T, Keys extends keyof T = keyof T> = { [K in Keys]: T[K] };\nexport type MongoQuery<T = AnyObject> = BuildMongoQuery<MergeUnion<T>, {\n  toplevel: {},\n  field: Pick<DefaultOperators<MergeUnion<T>>['field'], keyof typeof defaultInstructions>\n}> & Container<MongoQueryFactory>;\n\ntype MongoQueryMatcherFactory =\n  (...args: Partial<Parameters<typeof createFactory>>) => ConditionsMatcher<MongoQuery>;\nexport const buildMongoQueryMatcher = ((instructions, interpreters, options) => createFactory(\n  { ...defaultInstructions, ...instructions },\n  { ...defaultInterpreters, ...interpreters },\n  options\n)) as MongoQueryMatcherFactory;\n\nexport const mongoQueryMatcher = createFactory(defaultInstructions, defaultInterpreters);\nexport type {\n  MongoQueryFieldOperators,\n  MongoQueryTopLevelOperators,\n  MongoQueryOperators,\n} from '@ucast/mongo2js';\n","import { FieldMatcher } from '../types';\n\nconst REGEXP_SPECIAL_CHARS = /[-/\\\\^$+?.()|[\\]{}]/g;\nconst REGEXP_ANY = /\\.?\\*+\\.?/g;\nconst REGEXP_STARS = /\\*+/;\nconst REGEXP_DOT = /\\./g;\n\nfunction detectRegexpPattern(match: string, index: number, string: string): string {\n  const quantifier = string[0] === '*' || match[0] === '.' && match[match.length - 1] === '.'\n    ? '+'\n    : '*';\n  const matcher = match.indexOf('**') === -1 ? '[^.]' : '.';\n  const pattern = match.replace(REGEXP_DOT, '\\\\$&')\n    .replace(REGEXP_STARS, matcher + quantifier);\n\n  return index + match.length === string.length ? `(?:${pattern})?` : pattern;\n}\n\nfunction escapeRegexp(match: string, index: number, string: string): string {\n  if (match === '.' && (string[index - 1] === '*' || string[index + 1] === '*')) {\n    return match;\n  }\n\n  return `\\\\${match}`;\n}\n\nfunction createPattern(fields: string[]) {\n  const patterns = fields.map(field => field\n    .replace(REGEXP_SPECIAL_CHARS, escapeRegexp)\n    .replace(REGEXP_ANY, detectRegexpPattern));\n  const pattern = patterns.length > 1 ? `(?:${patterns.join('|')})` : patterns[0];\n\n  return new RegExp(`^${pattern}$`);\n}\n\nexport const fieldPatternMatcher: FieldMatcher = (fields) => {\n  let pattern: RegExp | null;\n\n  return (field) => {\n    if (typeof pattern === 'undefined') {\n      pattern = fields.every(f => f.indexOf('*') === -1)\n        ? null\n        : createPattern(fields);\n    }\n\n    return pattern === null\n      ? fields.indexOf(field) !== -1\n      : pattern.test(field);\n  };\n};\n","import { PureAbility, AbilityOptions, AbilityOptionsOf } from './PureAbility';\nimport { RawRuleFrom } from './RawRule';\nimport { AbilityTuple } from './types';\nimport { MongoQuery, mongoQueryMatcher } from './matchers/conditions';\nimport { fieldPatternMatcher } from './matchers/field';\nimport { Public, RawRuleOf } from './RuleIndex';\n\n/**\n * @deprecated use createMongoAbility function instead and MongoAbility<Abilities> interface.\n * In the next major version PureAbility will be renamed to Ability and this class will be removed\n */\nexport class Ability<\n  A extends AbilityTuple = AbilityTuple,\n  C extends MongoQuery = MongoQuery\n> extends PureAbility<A, C> {\n  constructor(rules: RawRuleFrom<A, C>[] = [], options: AbilityOptions<A, C> = {}) {\n    super(rules, {\n      conditionsMatcher: mongoQueryMatcher,\n      fieldMatcher: fieldPatternMatcher,\n      ...options,\n    });\n  }\n}\n\nexport interface AnyMongoAbility extends Public<PureAbility<any, MongoQuery>> {}\nexport interface MongoAbility<\n  A extends AbilityTuple = AbilityTuple,\n  C extends MongoQuery = MongoQuery\n> extends PureAbility<A, C> {}\n\n/**\n * Creates Ability with MongoDB conditions matcher\n */\nexport function createMongoAbility<\n  T extends AnyMongoAbility = MongoAbility\n>(rules?: RawRuleOf<T>[], options?: AbilityOptionsOf<T>): T;\nexport function createMongoAbility<\n  A extends AbilityTuple = AbilityTuple,\n  C extends MongoQuery = MongoQuery\n>(rules?: RawRuleFrom<A, C>[], options?: AbilityOptions<A, C>): MongoAbility<A, C>;\nexport function createMongoAbility(rules: any[] = [], options = {}): AnyMongoAbility {\n  return new PureAbility(rules, {\n    conditionsMatcher: mongoQueryMatcher,\n    fieldMatcher: fieldPatternMatcher,\n    ...options,\n  });\n}\n","import { AnyMongoAbility, createMongoAbility, MongoAbility } from './Ability';\nimport { ProduceGeneric } from './hkt';\nimport { AbilityOptionsOf, AnyAbility } from './PureAbility';\nimport { Generics, RawRuleOf } from './RuleIndex';\nimport {\n  AbilityTuple, AnyClass, AnyObject, ExtractSubjectType as E, Normalize, SubjectType,\n  TaggedInterface\n} from './types';\n\nfunction isAbilityClass(factory: AbilityFactory<any>): factory is AnyClass {\n  return typeof factory.prototype.possibleRulesFor === 'function';\n}\n\nclass RuleBuilder<T extends AnyAbility> {\n  public _rule!: RawRuleOf<T>;\n\n  constructor(rule: RawRuleOf<T>) {\n    this._rule = rule;\n  }\n\n  because(reason: string): this {\n    this._rule.reason = reason;\n    return this;\n  }\n}\n\ntype AbilityFactory<T extends AnyAbility> = AnyClass<T> | ((rules?: any[], options?: any) => T);\ntype InstanceOf<T extends AnyAbility, S extends SubjectType> = S extends AnyClass<infer R>\n  ? R\n  : S extends (...args: any[]) => infer O\n    ? O\n    : S extends string\n      ? Exclude<Normalize<Generics<T>['abilities']>[1], SubjectType> extends TaggedInterface<string>\n        ? Extract<Normalize<Generics<T>['abilities']>[1], TaggedInterface<S>>\n        : AnyObject\n      : never;\ntype ConditionsOf<T extends AnyAbility, I extends {}> =\n  ProduceGeneric<Generics<T>['conditions'], I>;\ntype ActionFrom<T extends AbilityTuple, S extends SubjectType> = T extends any\n  ? S extends Extract<T[1], SubjectType> ? T[0] : never\n  : never;\ntype ActionOf<T extends AnyAbility, S extends SubjectType> = ActionFrom<Generics<T>['abilities'], S>;\ntype SubjectTypeOf<T extends AnyAbility> = E<Normalize<Generics<T>['abilities']>[1]>;\n\ntype SimpleCanParams<T extends AnyAbility> = Parameters<(\n  action: Generics<T>['abilities'] | Generics<T>['abilities'][]\n) => 0>;\ntype BuilderCanParameters<\n  S extends SubjectType,\n  I extends InstanceOf<T, S>,\n  T extends AnyAbility\n> = Generics<T>['abilities'] extends AbilityTuple\n  ? Parameters<(\n    action: ActionOf<T, S> | ActionOf<T, S>[],\n    subject: S | S[],\n    conditions?: ConditionsOf<T, I>\n  ) => 0>\n  : SimpleCanParams<T>;\n\ntype BuilderCanParametersWithFields<\n  S extends SubjectType,\n  I extends InstanceOf<T, S>,\n  F extends string,\n  T extends AnyAbility\n> = Generics<T>['abilities'] extends AbilityTuple\n  ? Parameters<(\n    action: ActionOf<T, S> | ActionOf<T, S>[],\n    subject: S | S[],\n    fields?: F | F[],\n    conditions?: ConditionsOf<T, I>\n  ) => 0>\n  : SimpleCanParams<T>;\ntype Keys<T> = string & keyof T;\n\ntype AddRule<T extends AnyAbility> = {\n  <\n    I extends InstanceOf<T, S>,\n    F extends string = Keys<I>,\n    S extends SubjectTypeOf<T> = SubjectTypeOf<T>\n  >(...args: BuilderCanParametersWithFields<S, I, F | Keys<I>, T>): RuleBuilder<T>;\n  <\n    I extends InstanceOf<T, S>,\n    S extends SubjectTypeOf<T> = SubjectTypeOf<T>\n  >(...args: BuilderCanParameters<S, I, T>): RuleBuilder<T>;\n};\n\nexport class AbilityBuilder<T extends AnyAbility> {\n  public rules: RawRuleOf<T>[] = [];\n  private readonly _createAbility: AbilityFactory<T>;\n  public can: AddRule<T>;\n  public cannot: AddRule<T>;\n  public build: (options?: AbilityOptionsOf<T>) => T;\n\n  constructor(AbilityType: AbilityFactory<T>) {\n    this._createAbility = AbilityType;\n\n    this.can = (\n      action: string | string[],\n      subject?: SubjectType | SubjectType[],\n      conditionsOrFields?: string | string[] | Generics<T>['conditions'],\n      conditions?: Generics<T>['conditions']\n    ) => this._addRule(action, subject, conditionsOrFields, conditions, false);\n    this.cannot = (\n      action: string | string[],\n      subject?: SubjectType | SubjectType[],\n      conditionsOrFields?: string | string[] | Generics<T>['conditions'],\n      conditions?: Generics<T>['conditions']\n    ) => this._addRule(action, subject, conditionsOrFields, conditions, true);\n\n    this.build = options => (isAbilityClass(this._createAbility)\n      ? new this._createAbility(this.rules, options)\n      : this._createAbility(this.rules, options));\n  }\n\n  private _addRule(\n    action: string | string[],\n    subject?: SubjectType | SubjectType[],\n    conditionsOrFields?: string | string[] | Generics<T>['conditions'],\n    conditions?: Generics<T>['conditions'],\n    inverted?: boolean\n  ): RuleBuilder<T> {\n    const rule = { action } as RawRuleOf<T>;\n\n    if (inverted) rule.inverted = inverted;\n    if (subject) {\n      rule.subject = subject;\n\n      if (Array.isArray(conditionsOrFields) || typeof conditionsOrFields === 'string') {\n        rule.fields = conditionsOrFields;\n      } else if (typeof conditionsOrFields !== 'undefined') {\n        rule.conditions = conditionsOrFields;\n      }\n\n      if (typeof conditions !== 'undefined') {\n        rule.conditions = conditions;\n      }\n    }\n\n    this.rules.push(rule);\n    return new RuleBuilder(rule);\n  }\n}\n\ntype DSL<T extends AnyAbility, R> = (\n  can: AbilityBuilder<T>['can'],\n  cannot: AbilityBuilder<T>['cannot']\n) => R;\n\nexport function defineAbility<\n  T extends AnyMongoAbility = MongoAbility\n>(define: DSL<T, Promise<void>>, options?: AbilityOptionsOf<T>): Promise<T>;\nexport function defineAbility<\n  T extends AnyMongoAbility = MongoAbility\n>(define: DSL<T, void>, options?: AbilityOptionsOf<T>): T;\nexport function defineAbility<\n  T extends AnyMongoAbility\n>(define: DSL<T, void | Promise<void>>, options?: AbilityOptionsOf<T>): T | Promise<T> {\n  const builder = new AbilityBuilder<T>(createMongoAbility);\n  const result = define(builder.can, builder.cannot);\n\n  if (result && typeof result.then === 'function') {\n    return result.then(() => builder.build(options));\n  }\n\n  return builder.build(options);\n}\n","import { AnyAbility } from './PureAbility';\nimport { Normalize, Subject } from './types';\nimport { Generics } from './RuleIndex';\nimport { getSubjectTypeName } from './utils';\n\nexport type GetErrorMessage = (error: ForbiddenError<AnyAbility>) => string;\n/** @deprecated will be removed in the next major release */\nexport const getDefaultErrorMessage: GetErrorMessage = error => `Cannot execute \"${error.action}\" on \"${error.subjectType}\"`;\n\nconst NativeError = function NError(this: Error, message: string) {\n  this.message = message;\n} as unknown as new (message: string) => Error;\n\nNativeError.prototype = Object.create(Error.prototype);\n\nexport class ForbiddenError<T extends AnyAbility> extends NativeError {\n  public readonly ability!: T;\n  public action!: Normalize<Generics<T>['abilities']>[0];\n  public subject!: Generics<T>['abilities'][1];\n  public field?: string;\n  public subjectType!: string;\n\n  static _defaultErrorMessage = getDefaultErrorMessage;\n\n  static setDefaultMessage(messageOrFn: string | GetErrorMessage) {\n    this._defaultErrorMessage = typeof messageOrFn === 'string' ? () => messageOrFn : messageOrFn;\n  }\n\n  static from<U extends AnyAbility>(ability: U): ForbiddenError<U> {\n    return new this<U>(ability);\n  }\n\n  private constructor(ability: T) {\n    super('');\n    this.ability = ability;\n\n    if (typeof Error.captureStackTrace === 'function') {\n      this.name = 'ForbiddenError';\n      Error.captureStackTrace(this, this.constructor);\n    }\n  }\n\n  setMessage(message: string): this {\n    this.message = message;\n    return this;\n  }\n\n  throwUnlessCan(...args: Parameters<T['can']>): void;\n  throwUnlessCan(action: string, subject?: Subject, field?: string): void {\n    const error = (this as any).unlessCan(action, subject, field);\n    if (error) throw error;\n  }\n\n  unlessCan(...args: Parameters<T['can']>): this | undefined;\n  unlessCan(action: string, subject?: Subject, field?: string): this | undefined {\n    const rule = this.ability.relevantRuleFor(action, subject, field);\n\n    if (rule && !rule.inverted) {\n      return;\n    }\n\n    this.action = action;\n    this.subject = subject;\n    this.subjectType = getSubjectTypeName(this.ability.detectSubjectType(subject));\n    this.field = field;\n\n    const reason = rule ? rule.reason : '';\n    // eslint-disable-next-line no-underscore-dangle\n    this.message = this.message || reason || (this.constructor as any)._defaultErrorMessage(this);\n    return this; // eslint-disable-line consistent-return\n  }\n}\n","import { PureComponent, ReactNode } from 'react';\nimport {\n  Unsubscribe,\n  AbilityTuple,\n  SubjectType,\n  AnyAbility,\n  Generics,\n  Abilities,\n  IfString,\n} from '@casl/ability';\n\nconst noop = () => {};\n\ntype AbilityCanProps<\n  T extends Abilities,\n  Else = IfString<T, { do: T } | { I: T }>\n> = T extends AbilityTuple\n  ? { do: T[0], on: T[1], field?: string } |\n  { I: T[0], a: Extract<T[1], SubjectType>, field?: string } |\n  { I: T[0], an: Extract<T[1], SubjectType>, field?: string } |\n  { I: T[0], this: Exclude<T[1], SubjectType>, field?: string }\n  : Else;\n\ninterface ExtraProps {\n  not?: boolean\n  passThrough?: boolean\n}\n\ninterface CanExtraProps<T extends AnyAbility> extends ExtraProps {\n  ability: T\n  children: ReactNode | ((isAllowed: boolean, ability: T) => ReactNode)\n}\n\ninterface BoundCanExtraProps<T extends AnyAbility> extends ExtraProps {\n  ability?: T\n  children: ReactNode | ((isAllowed: boolean, ability: T) => ReactNode)\n}\n\nexport type CanProps<T extends AnyAbility> =\n  AbilityCanProps<Generics<T>['abilities']> & CanExtraProps<T>;\nexport type BoundCanProps<T extends AnyAbility> =\n  AbilityCanProps<Generics<T>['abilities']> & BoundCanExtraProps<T>;\n\nexport class Can<\n  T extends AnyAbility,\n  IsBound extends boolean = false\n> extends PureComponent<IsBound extends true ? BoundCanProps<T> : CanProps<T>> {\n  private _isAllowed: boolean = false;\n  private _ability: T | null = null;\n  private _unsubscribeFromAbility: Unsubscribe = noop;\n\n  componentWillUnmount() {\n    this._unsubscribeFromAbility();\n  }\n\n  private _connectToAbility(ability?: T) {\n    if (ability === this._ability) {\n      return;\n    }\n\n    this._unsubscribeFromAbility();\n    this._ability = null;\n\n    if (ability) {\n      this._ability = ability;\n      this._unsubscribeFromAbility = ability.on('updated', () => this.forceUpdate());\n    }\n  }\n\n  get allowed() {\n    return this._isAllowed;\n  }\n\n  private _canRender(): boolean {\n    const props: any = this.props;\n    const subject = props.of || props.a || props.an || props.this || props.on;\n    const can = props.not ? 'cannot' : 'can';\n\n    return props.ability[can](props.I || props.do, subject, props.field);\n  }\n\n  render() {\n    this._connectToAbility(this.props.ability);\n    this._isAllowed = this._canRender();\n    return this.props.passThrough || this._isAllowed ? this._renderChildren() : null;\n  }\n\n  private _renderChildren() {\n    const { children, ability } = this.props;\n    const elements = typeof children === 'function'\n      ? children(this._isAllowed, ability as any)\n      : children;\n\n    return elements as ReactNode;\n  }\n}\n"],"names":["_excluded","_extends","Object","assign","bind","target","i","arguments","length","source","key","prototype","hasOwnProperty","call","apply","this","ownKeys","object","enumerableOnly","keys","getOwnPropertySymbols","symbols","filter","sym","getOwnPropertyDescriptor","enumerable","push","_defineProperty","obj","value","defineProperty","configurable","writable","_objectWithoutProperties","excluded","sourceKeys","indexOf","_objectWithoutPropertiesLoose","sourceSymbolKeys","propertyIsEnumerable","propTypes","active","PropTypes","onClick","variant","className","cssModule","innerRef","CloseButton","props","attributes","classes","mapToCssModules","classNames","concat","React","ref","type","forEach","getOwnPropertyDescriptors","defineProperties","_objectSpread","block","children","close","color","disabled","outline","size","tag","tagPropType","Button","useCallback","e","preventDefault","ariaLabel","_props$color","_props$tag","Tag","btnOutlineColor","href","undefined","role","vertical","ButtonGroup","body","inverse","Card","CardBody","CardSubtitle","CardTitle","colWidths","stringOrNumberProp","columnProps","order","offset","xs","sm","md","lg","xl","xxl","widths","getColumnSizeClass","isXs","colWidth","colSize","Col","_props$widths","_getColumnClasses","modifiedAttributes","colClasses","columnProp","isObject","_classNames","colSizeInterfix","colClass","_colClass","getColumnClasses","flush","horizontal","numbered","ListGroup","_props$horizontal","_props$numbered","getHorizontalClass","action","handleDisabledOnClick","ListGroupItem","rowColWidths","rowColsPropType","noGutters","deprecated","Row","t","constructor","operator","notes","addNote","r","Array","isArray","Error","n","o","field","s","c","u","a","h","create","f","d","p","w","O","compound","map","parse","name","document","j","operatorToConditionName","defaultOperatorName","mergeFinalConditions","reduce","fieldContext","query","hasOperators","l","useIgnoreValue","documentContext","setParse","parseField","parseInstruction","validate","parseFieldOperators","_","y","_ref","RegExp","$","_ref2","x","v","m","g","Date","b","E","R","$options","q","A","N","freeze","__proto__","$and","$or","$nor","$not","$elemMatch","$size","$in","$nin","$all","$mod","$exists","$gte","$gt","$lt","$lte","$eq","$ne","$regex","$where","P","slice","super","z","Number","isNaN","get","some","defaultGet","lastIndexOf","String","split","getInterpreterName","numberOfArguments","interpret","compare","or","and","every","eq","_ref4","ne","exists","_ref5","Boolean","_ref6","test","_ref7","nin","all","_ref8","elemMatch","_ref9","nor","not","_ref3","lte","lt","gt","gte","mod","regex","within","where","M","in","getTime","toJSON","comparePrimitives","forPrimitives","_len","_key","ast","C","S","modelName","hasOwn","B","function","string","U","G","priority","H","set","I","K","fields","fieldMatcher","conditions","conditionsMatcher","J","resolveAction","subject","inverted","reason","origin","matchesConditions","matchesField","V","prev","next","W","rules","merged","X","Map","Z","anyAction","anySubjectType","detectSubjectType","update","ability","possibleRulesFor","has","rulesFor","actionsFor","Set","from","add","on","F","delete","Q","PureAbility","can","relevantRuleFor","cannot","tt","it","st","nt","rt","ot","ct","ut","replace","ht","at","join","createMongoAbility","ft","because","AbilityBuilder","build","isAbilityClass","defineAbility","then","yt","message","setDefaultMessage","captureStackTrace","setMessage","throwUnlessCan","unlessCan","subjectType","T","noop","componentWillUnmount","forceUpdate","allowed","of","an","do","render","passThrough"],"sourceRoot":""}